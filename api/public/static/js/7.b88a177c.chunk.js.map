{"version":3,"sources":["Admin/Pages/AddCard/Form/Form.tsx","Admin/Pages/AddCard/AddCard.tsx"],"names":["upload","Form","addCard","useState","validMessages","setValidMessages","useFormInput","name","slug","content","price","position","tags","checkbox","formValue","container","useRef","validation","useMemo","getValidation","onSubmit","useCallback","e","preventDefault","variables","available","value","describe","Number","replace","split","valid","other","array","cachedFileArray","file","console","log","isValid","window","scrollTo","top","useEffect","FileUploadWithPreview","accept","text","browse","chooseFile","label","selectedCount","id","className","method","role","htmlFor","type","placeholder","onChange","required","checked","ref","AddCard","success","setSuccess","useMutation","UPSERT_CARD","onCompleted","data","upsertCard","refetchQueries","query","GET_SERVICE_CARDS","loading","error","Spinner","SuccessMutationAdmin","repeat","ErrorMutationAdmin","Error","tryAgain"],"mappings":"0KA4BIA,EAAuC,KAE9BC,EAAO,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QACrB,EAA0CC,mBAA0B,MAApE,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAoBC,YAAa,CAC/BC,KAAM,GACNC,KAAM,GACNC,QAAS,GACTC,MAAO,EACPC,SAAU,EACVC,KAAM,GACNC,SAAU,UAPLC,EAAP,oBASMC,EAAYC,mBACZC,EAAaC,mBAAQ,kBAAMC,gBAAiB,IAE5CC,EAAWC,uBACf,SAACC,GACCA,EAAEC,iBACF,IAAMC,EAA8C,CAClDC,UAAwC,SAA7BX,EAAUY,MAAMb,SAC3Bc,SAAUb,EAAUY,MAAMjB,QAC1BF,KAAMO,EAAUY,MAAMnB,KACtBC,KAAMM,EAAUY,MAAMlB,KACtBE,MAAOkB,OAAOd,EAAUY,MAAMhB,OAC9BE,KAAME,EAAUY,MAAMd,KAAKiB,QAAQ,MAAO,IAAIC,MAAM,MAEhDC,EAAQd,EAAW,CACvBR,QAASe,EAAUG,SACnBpB,KAAMiB,EAAUjB,KAChByB,MAAOR,EAAUhB,KACjBE,MAAOc,EAAUd,MACjBuB,MAAOT,EAAUZ,OAEnBP,EAAiB0B,GACb/B,GAAUA,EAAOkC,kBACnBV,EAAUW,KAAOnC,EAAOkC,gBAAgB,IAEtCpB,EAAUY,MAAMf,WAClBa,EAAUb,SAAWiB,OAAOd,EAAUY,MAAMf,WAC9CyB,QAAQC,IAAIN,GACRA,EAAMO,QAASpC,EAAQ,CAAEsB,cACxBe,OAAOC,SAAS,CAAEC,IAAK,QAE9B,CAAC3B,EAAUY,MAAOT,IAkBpB,OAfAyB,qBAAU,WAUR,OATA1C,EAAS,IAAI2C,IAAsB,eAAgB,CACjDC,OAAQ,UACRC,KAAM,CACJC,OAAQ,sEACRC,WAAY,6EACZC,MAAO,qEACPC,cAAe,mEAGZ,WACLjD,EAAS,QAEV,IAGD,uBACEkD,GAAG,OACHC,UAAU,mBACVC,OAAO,OACPC,KAAK,OACLjC,SAAUA,EALZ,UAOE,sBAAK+B,UAAU,UAAf,UACE,sBAAKA,UAAU,SAAf,UACE,wBAAOG,QAAQ,OAAOH,UAAU,aAAhC,8DACW,sBAAMA,UAAU,aAAhB,0EAEX,uBACE5C,KAAK,OACLgD,KAAK,OACLJ,UAAS,uBACP/C,GACAA,EAAcG,OACU,YAAvBH,EAAcG,KAAqB,WAAa,eAEnD2C,GAAG,OACHM,YAAY,mDACZ9B,MAAOZ,EAAUY,MAAMnB,KACvBkD,SAAU3C,EAAU2C,SACpBC,UAAQ,IAEV,qBAAKP,UAAU,mBAAf,SACG/C,GAAiBA,EAAcG,UAIpC,sBAAK4C,UAAU,SAAf,UACE,uBAAOG,QAAQ,OAAOH,UAAU,aAAhC,yGAGA,uBACE5C,KAAK,OACLgD,KAAK,OACLJ,UAAS,uBACP/C,GACAA,EAAc4B,QACW,YAAxB5B,EAAc4B,MAAsB,WAAa,eAEpDkB,GAAG,OACHM,YAAY,8FACZ9B,MAAOZ,EAAUY,MAAMlB,KACvBiD,SAAU3C,EAAU2C,SACpBC,UAAQ,IAEV,qBAAKP,UAAU,mBAAf,SACG/C,GAAiBA,EAAc4B,WAIpC,sBAAKmB,UAAU,cAAf,UACE,sBAAMA,UAAU,mBAAhB,8DACA,0BACE5C,KAAK,UACL4C,UAAS,uBACP/C,GACAA,EAAcK,UACa,YAA1BL,EAAcK,QAAwB,WAAa,eAEtD,aAAW,gBACXiB,MAAOZ,EAAUY,MAAMjB,QACvBgD,SAAU3C,EAAU2C,SACpBC,UAAQ,IAEV,qBAAKP,UAAU,mBAAf,SACG/C,GAAiBA,EAAcK,aAIpC,sBAAK0C,UAAU,SAAf,UACE,uBAAOG,QAAQ,QAAQH,UAAU,aAAjC,oEAGA,uBACE5C,KAAK,QACLgD,KAAK,SACLJ,UAAS,uBACP/C,GACAA,EAAcM,QACW,YAAxBN,EAAcM,MAAsB,WAAa,eAEpDwC,GAAG,QACHM,YAAY,yDACZ9B,MAAOZ,EAAUY,MAAMhB,MACvB+C,SAAU3C,EAAU2C,SACpBC,UAAQ,IAEV,qBAAKP,UAAU,mBAAf,SACG/C,GAAiBA,EAAcM,WAIpC,sBAAKyC,UAAU,SAAf,UACE,wBAAOG,QAAQ,WAAWH,UAAU,aAApC,+GACqB,IACnB,sBAAMA,UAAU,aAAhB,uHAEF,uBACE5C,KAAK,WACLgD,KAAK,SACLJ,UAAU,eACVD,GAAG,WACHM,YAAY,6CACZ9B,MAAOZ,EAAUY,MAAMf,SACvB8C,SAAU3C,EAAU2C,SACpBC,UAAQ,OAIZ,sBAAKP,UAAU,SAAf,UACE,wBAAOG,QAAQ,OAAOH,UAAU,aAAhC,sCACO,sBAAMA,UAAU,aAAhB,4FAEP,uBACE5C,KAAK,OACLgD,KAAK,OACLJ,UAAS,uBACP/C,GACAA,EAAc6B,QACW,YAAxB7B,EAAc6B,MAAsB,WAAa,eAEpDiB,GAAG,OACHM,YAAY,2BACZ9B,MAAOZ,EAAUY,MAAMd,KACvB6C,SAAU3C,EAAU2C,SACpBC,UAAQ,IAEV,qBAAKP,UAAU,mBAAf,SACG/C,GAAiBA,EAAc6B,WAIpC,sBAAKkB,UAAU,SAAf,UACE,uBACE5C,KAAK,WACLgD,KAAK,WACLJ,UAAU,mBACVD,GAAG,eACHxB,MAAOZ,EAAUY,MAAMb,SACvB8C,QAAsC,SAA7B7C,EAAUY,MAAMb,SACzB4C,SAAU3C,EAAU2C,WAEtB,uBAAON,UAAU,wBAAwBG,QAAQ,eAAjD,iLAIF,qBACEM,IAAK7C,EACLoC,UAAU,6BACV,iBAAe,oBAGnB,oBAAIA,UAAU,SACd,wBACED,GAAG,SACHC,UAAU,+BACVI,KAAK,SAHP,kE,mDCjMSM,UA9CC,WACd,MAA8B1D,mBAAS,IAAvC,mBAAO2D,EAAP,KAAgBC,EAAhB,KACA,EAAsCC,YAGpCC,IAAa,CACbC,YAAa,SAACC,GACRA,EAAKC,WACPL,EAAW,QACNA,EAAW,UAEpBM,eAAgB,CAAC,CAAEC,MAAOC,QAT5B,mBAAOrE,EAAP,YAAkBsE,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,MAY3B,OAAID,EAAgB,cAACE,EAAA,EAAD,IACJ,SAAZZ,EACK,cAACa,EAAA,EAAD,CAAsBC,OAAQ,kBAAMb,EAAW,OACxC,UAAZD,GAAuBW,EAEvB,cAACI,EAAA,EAAD,CACEJ,MAAOA,GAAS,IAAIK,MAAM,0KAC1BC,SAAU,kBAAMhB,EAAW,OAI/B,qCACE,qBAAKZ,UAAU,+BAAf,SACE,oBAAIA,UAAU,KAAd,oIAEF,qBAAKA,UAAU,mBAAf,SACE,mBAAGA,UAAU,OAAb,geAMF,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,oBAAIA,UAAU,OAAd,6FAEA,cAAC,EAAD,CAAMjD,QAASA","file":"static/js/7.b88a177c.chunk.js","sourcesContent":["import { useFormInput } from \"../../../../Hooks/useFormInput\";\nimport {\n  FormEvent,\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from \"react\";\nimport \"../../../../CSS/file-upload-with-preview.min.css\";\nimport { FileUploadWithPreview } from \"../../../../functions/file-upload/src\";\nimport { MutationFunctionOptions } from \"@apollo/client\";\nimport { UpsertCardType } from \"../../../../GraphQL/Mutation\";\nimport {\n  Messages,\n  validation as getValidation\n} from \"../../../../functions/validation\";\n\ntype FormProps = {\n  addCard: (\n    options?: MutationFunctionOptions<\n      UpsertCardType[\"UpsertCard\"],\n      UpsertCardType[\"UpsertCardVars\"]\n    >\n  ) => void;\n};\n\nlet upload: FileUploadWithPreview | null = null;\n\nexport const Form = ({ addCard }: FormProps) => {\n  const [validMessages, setValidMessages] = useState<Messages | null>(null);\n  const [formValue] = useFormInput({\n    name: \"\",\n    slug: \"\",\n    content: \"\",\n    price: 0,\n    position: 0,\n    tags: \"\",\n    checkbox: \"false\"\n  });\n  const container = useRef() as MutableRefObject<HTMLDivElement>;\n  const validation = useMemo(() => getValidation(), []);\n\n  const onSubmit = useCallback(\n    (e: FormEvent) => {\n      e.preventDefault();\n      const variables: UpsertCardType[\"UpsertCardVars\"] = {\n        available: formValue.value.checkbox === \"true\",\n        describe: formValue.value.content,\n        name: formValue.value.name,\n        slug: formValue.value.slug,\n        price: Number(formValue.value.price),\n        tags: formValue.value.tags.replace(/\\s/g, \"\").split(\",\")\n      };\n      const valid = validation({\n        content: variables.describe,\n        name: variables.name,\n        other: variables.slug,\n        price: variables.price,\n        array: variables.tags\n      });\n      setValidMessages(valid);\n      if (upload && upload.cachedFileArray) {\n        variables.file = upload.cachedFileArray[0];\n      }\n      if (formValue.value.position)\n        variables.position = Number(formValue.value.position);\n      console.log(valid);\n      if (valid.isValid) addCard({ variables });\n      else window.scrollTo({ top: 150 });\n    },\n    [formValue.value, validation]\n  );\n\n  useEffect(() => {\n    upload = new FileUploadWithPreview(\"myFirstImage\", {\n      accept: \"image/*\",\n      text: {\n        browse: \"Выбрать файл\",\n        chooseFile: \"Файл не выбран\",\n        label: \"Изображение\",\n        selectedCount: \"Файл выбран\"\n      }\n    });\n    return () => {\n      upload = null;\n    };\n  }, []);\n\n  return (\n    <form\n      id=\"form\"\n      className=\"needs-validation\"\n      method=\"post\"\n      role=\"form\"\n      onSubmit={onSubmit}\n    >\n      <div className=\"row g-3\">\n        <div className=\"col-12\">\n          <label htmlFor=\"name\" className=\"form-label\">\n            Название <span className=\"text-muted\">(на русском)</span>\n          </label>\n          <input\n            name=\"name\"\n            type=\"text\"\n            className={`form-control ${\n              validMessages &&\n              validMessages.name &&\n              (validMessages.name === \"isValid\" ? \"is-valid\" : \"is-invalid\")\n            }`}\n            id=\"name\"\n            placeholder=\"Название\"\n            value={formValue.value.name}\n            onChange={formValue.onChange}\n            required\n          />\n          <div className=\"invalid-feedback\">\n            {validMessages && validMessages.name}\n          </div>\n        </div>\n\n        <div className=\"col-12\">\n          <label htmlFor=\"slug\" className=\"form-label\">\n            Краткое описание\n          </label>\n          <input\n            name=\"slug\"\n            type=\"text\"\n            className={`form-control ${\n              validMessages &&\n              validMessages.other &&\n              (validMessages.other === \"isValid\" ? \"is-valid\" : \"is-invalid\")\n            }`}\n            id=\"slug\"\n            placeholder=\"Краткое описание\"\n            value={formValue.value.slug}\n            onChange={formValue.onChange}\n            required\n          />\n          <div className=\"invalid-feedback\">\n            {validMessages && validMessages.other}\n          </div>\n        </div>\n\n        <div className=\"input-group\">\n          <span className=\"input-group-text\">Описание</span>\n          <textarea\n            name=\"content\"\n            className={`form-control ${\n              validMessages &&\n              validMessages.content &&\n              (validMessages.content === \"isValid\" ? \"is-valid\" : \"is-invalid\")\n            }`}\n            aria-label=\"With textarea\"\n            value={formValue.value.content}\n            onChange={formValue.onChange}\n            required\n          />\n          <div className=\"invalid-feedback\">\n            {validMessages && validMessages.content}\n          </div>\n        </div>\n\n        <div className=\"col-12\">\n          <label htmlFor=\"price\" className=\"form-label\">\n            Стоимость\n          </label>\n          <input\n            name=\"price\"\n            type=\"number\"\n            className={`form-control ${\n              validMessages &&\n              validMessages.price &&\n              (validMessages.price === \"isValid\" ? \"is-valid\" : \"is-invalid\")\n            }`}\n            id=\"price\"\n            placeholder=\"Стоимость\"\n            value={formValue.value.price}\n            onChange={formValue.onChange}\n            required\n          />\n          <div className=\"invalid-feedback\">\n            {validMessages && validMessages.price}\n          </div>\n        </div>\n\n        <div className=\"col-12\">\n          <label htmlFor=\"position\" className=\"form-label\">\n            Позиция на витрине{\" \"}\n            <span className=\"text-muted\">(чем больше, тем выше)</span>\n          </label>\n          <input\n            name=\"position\"\n            type=\"number\"\n            className=\"form-control\"\n            id=\"position\"\n            placeholder=\"Позиция\"\n            value={formValue.value.position}\n            onChange={formValue.onChange}\n            required\n          />\n        </div>\n\n        <div className=\"col-12\">\n          <label htmlFor=\"tags\" className=\"form-label\">\n            Тэги <span className=\"text-muted\">(через запятую)</span>\n          </label>\n          <input\n            name=\"tags\"\n            type=\"text\"\n            className={`form-control ${\n              validMessages &&\n              validMessages.array &&\n              (validMessages.array === \"isValid\" ? \"is-valid\" : \"is-invalid\")\n            }`}\n            id=\"tags\"\n            placeholder=\"Тэги\"\n            value={formValue.value.tags}\n            onChange={formValue.onChange}\n            required\n          />\n          <div className=\"invalid-feedback\">\n            {validMessages && validMessages.array}\n          </div>\n        </div>\n\n        <div className=\"col-12\">\n          <input\n            name=\"checkbox\"\n            type=\"checkbox\"\n            className=\"form-check-input\"\n            id=\"same-address\"\n            value={formValue.value.checkbox}\n            checked={formValue.value.checkbox === \"true\"}\n            onChange={formValue.onChange}\n          />\n          <label className=\"form-check-label mx-1\" htmlFor=\"same-address\">\n            Сделать доступным для покупки.\n          </label>\n        </div>\n        <div\n          ref={container}\n          className=\"custom-file-container mb-3\"\n          data-upload-id=\"myFirstImage\"\n        />\n      </div>\n      <hr className=\"my-4\" />\n      <button\n        id=\"button\"\n        className=\"w-100 btn btn-success btn-lg\"\n        type=\"submit\"\n      >\n        Добавить\n      </button>\n    </form>\n  );\n};\n","import { Form } from \"./Form/Form\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { UPSERT_CARD, UpsertCardType } from \"../../../GraphQL/Mutation\";\r\nimport { Spinner } from \"../../../Components/Spinner/Spinner\";\r\nimport { useState } from \"react\";\r\nimport { ErrorMutationAdmin } from \"../../../Components/ErrorMutation/ErrorMutationAdmin\";\r\nimport { SuccessMutationAdmin } from \"../../../Components/SuccessMutation/SuccessMutationAdmin\";\r\nimport { GET_SERVICE_CARDS } from \"../../../GraphQL/Query\";\r\n\r\nconst AddCard = () => {\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [addCard, { loading, error }] = useMutation<\r\n    UpsertCardType[\"UpsertCard\"],\r\n    UpsertCardType[\"UpsertCardVars\"]\r\n  >(UPSERT_CARD, {\r\n    onCompleted: (data) => {\r\n      if (data.upsertCard) {\r\n        setSuccess(\"TRUE\");\r\n      } else setSuccess(\"FALSE\");\r\n    },\r\n    refetchQueries: [{ query: GET_SERVICE_CARDS }]\r\n  });\r\n\r\n  if (loading) return <Spinner />;\r\n  if (success === \"TRUE\")\r\n    return <SuccessMutationAdmin repeat={() => setSuccess(\"\")} />;\r\n  if (success === \"FALSE\" || error)\r\n    return (\r\n      <ErrorMutationAdmin\r\n        error={error || new Error(\"Отказано в совершении операции.\")}\r\n        tryAgain={() => setSuccess(\"\")}\r\n      />\r\n    );\r\n  return (\r\n    <>\r\n      <div className=\"pt-3 pb-2 mb-3 border-bottom\">\r\n        <h2 className=\"h2\">Добавить новую услугу</h2>\r\n      </div>\r\n      <div className=\"py-3 text-center\">\r\n        <p className=\"lead\">\r\n          Заполните форму ниже, для добавления нового вида услуги. Заполните все\r\n          предложенные поля.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"row pb-5\">\r\n        <div className=\"col-md-7 col-lg-8\">\r\n          <h4 className=\"mb-3\">Введите данные</h4>\r\n\r\n          <Form addCard={addCard} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default AddCard;\r\n"],"sourceRoot":""}