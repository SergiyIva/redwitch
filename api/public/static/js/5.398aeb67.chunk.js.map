{"version":3,"sources":["Components/ErrorQuery/ErrorQueryAdmin.tsx","Admin/Pages/EditCard/Form/Form.tsx","Admin/Pages/EditCard/DeleteCard/DeleteCard.tsx","Admin/Pages/EditCard/EditCard.tsx"],"names":["ErrorQueryAdmin","error","tryAgain","className","message","href","onClick","to","upload","Form","card","addCard","useState","validMessages","setValidMessages","useFormInput","name","slug","content","describe","price","position","tags","join","checkbox","available","toString","formValue","container","useRef","validation","useMemo","getValidation","onSubmit","useCallback","e","preventDefault","variables","value","Number","replace","split","valid","other","array","cachedFileArray","file","console","log","isValid","window","scrollTo","top","useEffect","FileUploadWithPreview","accept","text","browse","chooseFile","label","selectedCount","id","method","role","htmlFor","type","placeholder","onChange","required","checked","ref","DeleteCard","setSuccess","setError","useMutation","DELETE_CARD","idx","sku","onCompleted","data","closeBtn","current","click","deleteCard","cards","client","cache","readQuery","query","GET_SERVICE_CARDS","newCards","getCards","filter","newData","writeQuery","onError","loading","tabIndex","style","display","Spinner","EditCard","param","useParams","success","isError","useQuery","GET_SERVICE_CARD","UPSERT_CARD","upsertCard","error1","mutLoad","SuccessMutationAdmin","goBack","ErrorMutationAdmin","Error"],"mappings":"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","file":"static/js/5.398aeb67.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\r\n\r\ntype ErrorQueryAdminProps = {\r\n  error: Error;\r\n  tryAgain?: () => void;\r\n};\r\nexport const ErrorQueryAdmin = ({ error, tryAgain }: ErrorQueryAdminProps) => {\r\n  return (\r\n    <div className=\"container pt-3\">\r\n      <h1 className=\"alert-danger rounded-2 px-sm-1\">Произошла ошибка</h1>\r\n      <div>Произошла ошибка: {error.message}</div>\r\n      {tryAgain && (\r\n        <div>\r\n          Повторный{\" \"}\r\n          <a href=\"#\" onClick={tryAgain}>\r\n            запрос\r\n          </a>\r\n        </div>\r\n      )}\r\n      <p>Данные не были получены. Попробуйте выполнить запрос еще раз позже.</p>\r\n      <NavLink to=\"/admin/main\">На главную</NavLink>\r\n    </div>\r\n  );\r\n};\r\n","import { useFormInput } from \"../../../../Hooks/useFormInput\";\nimport {\n  FormEvent,\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from \"react\";\nimport \"../../../../CSS/file-upload-with-preview.min.css\";\nimport { FileUploadWithPreview } from \"../../../../functions/file-upload/src\";\nimport { MutationFunctionOptions } from \"@apollo/client\";\nimport { UpsertCardType } from \"../../../../GraphQL/Mutation\";\nimport {\n  Messages,\n  validation as getValidation\n} from \"../../../../functions/validation\";\nimport { Cardservice } from \"../../../../GraphQL/typeDefs\";\n\ntype FormProps = {\n  addCard: (\n    options?: MutationFunctionOptions<\n      UpsertCardType[\"UpsertCard\"],\n      UpsertCardType[\"UpsertCardVars\"]\n    >\n  ) => void;\n  card: Cardservice;\n};\n\nlet upload: FileUploadWithPreview | null = null;\n\nexport const Form = ({ card, addCard }: FormProps) => {\n  const [validMessages, setValidMessages] = useState<Messages | null>(null);\n  const [formValue] = useFormInput({\n    name: card.name,\n    slug: card.slug,\n    content: card.describe,\n    price: card.price,\n    position: card.position,\n    tags: card.tags.join(\",\"),\n    checkbox: card.available.toString()\n  });\n  const container = useRef() as MutableRefObject<HTMLDivElement>;\n  const validation = useMemo(() => getValidation(), []);\n\n  const onSubmit = useCallback(\n    (e: FormEvent) => {\n      e.preventDefault();\n      const variables: UpsertCardType[\"UpsertCardVars\"] = {\n        available: formValue.value.checkbox === \"true\",\n        describe: formValue.value.content,\n        name: formValue.value.name,\n        slug: formValue.value.slug,\n        price: Number(formValue.value.price),\n        tags: formValue.value.tags.replace(/\\s/g, \"\").split(\",\")\n      };\n      const valid = validation({\n        content: variables.describe,\n        name: variables.name,\n        other: variables.slug,\n        price: variables.price,\n        array: variables.tags\n      });\n      setValidMessages(valid);\n      if (upload && upload.cachedFileArray) {\n        variables.file = upload.cachedFileArray[0];\n      }\n      if (formValue.value.position)\n        variables.position = Number(formValue.value.position);\n      console.log(valid);\n      if (valid.isValid) addCard({ variables });\n      else window.scrollTo({ top: 150 });\n    },\n    [formValue.value, validation]\n  );\n\n  useEffect(() => {\n    upload = new FileUploadWithPreview(\"myFirstImage\", {\n      accept: \"image/*\",\n      text: {\n        browse: \"Выбрать файл\",\n        chooseFile: \"Файл не выбран\",\n        label: \"Изображение\",\n        selectedCount: \"Файл выбран\"\n      }\n    });\n    return () => {\n      upload = null;\n    };\n  }, []);\n\n  return (\n    <form\n      id=\"form\"\n      className=\"needs-validation\"\n      method=\"post\"\n      role=\"form\"\n      onSubmit={onSubmit}\n    >\n      <div className=\"row g-3\">\n        <div className=\"col-12\">\n          <label htmlFor=\"name\" className=\"form-label\">\n            Название <span className=\"text-muted\">(на русском)</span>\n          </label>\n          <input\n            name=\"name\"\n            type=\"text\"\n            className={`form-control ${\n              validMessages &&\n              validMessages.name &&\n              (validMessages.name === \"isValid\" ? \"is-valid\" : \"is-invalid\")\n            }`}\n            id=\"name\"\n            placeholder=\"Название\"\n            value={formValue.value.name}\n            onChange={formValue.onChange}\n            required\n          />\n          <div className=\"invalid-feedback\">\n            {validMessages && validMessages.name}\n          </div>\n        </div>\n\n        <div className=\"col-12\">\n          <label htmlFor=\"slug\" className=\"form-label\">\n            Краткое описание\n          </label>\n          <input\n            name=\"slug\"\n            type=\"text\"\n            className={`form-control ${\n              validMessages &&\n              validMessages.other &&\n              (validMessages.other === \"isValid\" ? \"is-valid\" : \"is-invalid\")\n            }`}\n            id=\"slug\"\n            placeholder=\"Краткое описание\"\n            value={formValue.value.slug}\n            onChange={formValue.onChange}\n            required\n          />\n          <div className=\"invalid-feedback\">\n            {validMessages && validMessages.other}\n          </div>\n        </div>\n\n        <div className=\"input-group\">\n          <span className=\"input-group-text\">Описание</span>\n          <textarea\n            name=\"content\"\n            className={`form-control ${\n              validMessages &&\n              validMessages.content &&\n              (validMessages.content === \"isValid\" ? \"is-valid\" : \"is-invalid\")\n            }`}\n            aria-label=\"With textarea\"\n            value={formValue.value.content}\n            onChange={formValue.onChange}\n            required\n          />\n          <div className=\"invalid-feedback\">\n            {validMessages && validMessages.content}\n          </div>\n        </div>\n\n        <div className=\"col-12\">\n          <label htmlFor=\"price\" className=\"form-label\">\n            Стоимость\n          </label>\n          <input\n            name=\"price\"\n            type=\"number\"\n            className={`form-control ${\n              validMessages &&\n              validMessages.price &&\n              (validMessages.price === \"isValid\" ? \"is-valid\" : \"is-invalid\")\n            }`}\n            id=\"price\"\n            placeholder=\"Стоимость\"\n            value={formValue.value.price}\n            onChange={formValue.onChange}\n            required\n          />\n          <div className=\"invalid-feedback\">\n            {validMessages && validMessages.price}\n          </div>\n        </div>\n\n        <div className=\"col-12\">\n          <label htmlFor=\"position\" className=\"form-label\">\n            Позиция на витрине{\" \"}\n            <span className=\"text-muted\">(чем больше, тем выше)</span>\n          </label>\n          <input\n            name=\"position\"\n            type=\"number\"\n            className=\"form-control\"\n            id=\"position\"\n            placeholder=\"Позиция\"\n            value={formValue.value.position}\n            onChange={formValue.onChange}\n            required\n          />\n        </div>\n\n        <div className=\"col-12\">\n          <label htmlFor=\"tags\" className=\"form-label\">\n            Тэги <span className=\"text-muted\">(через запятую)</span>\n          </label>\n          <input\n            name=\"tags\"\n            type=\"text\"\n            className={`form-control ${\n              validMessages &&\n              validMessages.array &&\n              (validMessages.array === \"isValid\" ? \"is-valid\" : \"is-invalid\")\n            }`}\n            id=\"tags\"\n            placeholder=\"Тэги\"\n            value={formValue.value.tags}\n            onChange={formValue.onChange}\n            required\n          />\n          <div className=\"invalid-feedback\">\n            {validMessages && validMessages.array}\n          </div>\n        </div>\n\n        <div className=\"col-12\">\n          <input\n            name=\"checkbox\"\n            type=\"checkbox\"\n            className=\"form-check-input\"\n            id=\"same-address\"\n            value={formValue.value.checkbox}\n            checked={formValue.value.checkbox === \"true\"}\n            onChange={formValue.onChange}\n          />\n          <label className=\"form-check-label mx-1\" htmlFor=\"same-address\">\n            Сделать доступным для покупки.\n          </label>\n        </div>\n        <div\n          ref={container}\n          className=\"custom-file-container mb-3\"\n          data-upload-id=\"myFirstImage\"\n        />\n      </div>\n      <hr className=\"my-4\" />\n      <button\n        id=\"button\"\n        className=\"w-100 btn btn-success btn-lg\"\n        type=\"submit\"\n      >\n        Сохранить\n      </button>\n    </form>\n  );\n};\n","import { Cardservice } from \"../../../../GraphQL/typeDefs\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { DELETE_CARD, DeleteCardType } from \"../../../../GraphQL/Mutation\";\r\nimport { Spinner } from \"../../../../Components/Spinner/Spinner\";\r\nimport { MutableRefObject, useRef } from \"react\";\r\nimport { GET_SERVICE_CARDS, GetServiceCards } from \"../../../../GraphQL/Query\";\r\n\r\ntype DeleteCardProps = {\r\n  card: Cardservice;\r\n  setSuccess: (arg: \"TRUE\" | \"FALSE\") => void;\r\n  setError: (err: Error) => void;\r\n};\r\nexport const DeleteCard = ({ card, setSuccess, setError }: DeleteCardProps) => {\r\n  const [deleteCard, { loading, client }] = useMutation<\r\n    DeleteCardType[\"DeleteCard\"],\r\n    DeleteCardType[\"DeleteCardVars\"]\r\n  >(DELETE_CARD, {\r\n    variables: {\r\n      idx: card.sku\r\n    },\r\n    onCompleted: (data) => {\r\n      closeBtn.current.click();\r\n      if (data.deleteCard) {\r\n        setSuccess(\"TRUE\");\r\n        const cards = client.cache.readQuery<GetServiceCards>({\r\n          query: GET_SERVICE_CARDS\r\n        });\r\n        if (!cards) return;\r\n        const newCards = cards.getCards.filter(({ id }) => card.id !== id);\r\n        const newData = {\r\n          ...cards,\r\n          getCards: newCards\r\n        };\r\n        client.cache.writeQuery({\r\n          query: GET_SERVICE_CARDS,\r\n          data: newData\r\n        });\r\n      } else setSuccess(\"FALSE\");\r\n    },\r\n    onError: (e) => {\r\n      closeBtn.current.click();\r\n      setError(e);\r\n    }\r\n  });\r\n  const closeBtn = useRef() as MutableRefObject<HTMLButtonElement>;\r\n  const onClick = () => {\r\n    deleteCard();\r\n  };\r\n  return (\r\n    <>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-danger w-100 mt-3\"\r\n        data-bs-toggle=\"modal\"\r\n        data-bs-target=\"#exampleModalDefault\"\r\n      >\r\n        Удалить\r\n      </button>\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"exampleModalDefault\"\r\n        tabIndex={-1}\r\n        aria-labelledby=\"exampleModalLabel\"\r\n        style={{ display: \"none\" }}\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                Подтвердить удаление\r\n              </h5>\r\n              <button\r\n                ref={closeBtn}\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              />\r\n            </div>\r\n            {loading ? (\r\n              <Spinner />\r\n            ) : (\r\n              <div className=\"modal-body\">\r\n                Вы действительно хотите удалить услугу {card.name}? Данные\r\n                невозможно будет восстановить.\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-bs-dismiss=\"modal\"\r\n              >\r\n                Отмена\r\n              </button>\r\n              <button\r\n                id=\"delBtn\"\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                onClick={onClick}\r\n              >\r\n                Подтвердить\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useParams } from \"react-router-dom\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { GET_SERVICE_CARD, GetServiceCardType } from \"../../../GraphQL/Query\";\r\nimport { Spinner } from \"../../../Components/Spinner/Spinner\";\r\nimport { Form } from \"./Form/Form\";\r\nimport { UPSERT_CARD, UpsertCardType } from \"../../../GraphQL/Mutation\";\r\nimport { useState } from \"react\";\r\nimport { ErrorMutationAdmin } from \"../../../Components/ErrorMutation/ErrorMutationAdmin\";\r\nimport { SuccessMutationAdmin } from \"../../../Components/SuccessMutation/SuccessMutationAdmin\";\r\nimport { ErrorQueryAdmin } from \"../../../Components/ErrorQuery/ErrorQueryAdmin\";\r\nimport { DeleteCard } from \"./DeleteCard/DeleteCard\";\r\n\r\nconst EditCard = () => {\r\n  const param = useParams();\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [isError, setError] = useState<null | Error>(null);\r\n  const { data, loading, error } = useQuery<\r\n    GetServiceCardType[\"GetServiceCard\"],\r\n    GetServiceCardType[\"GetServiceCardVars\"]\r\n  >(GET_SERVICE_CARD, {\r\n    variables: {\r\n      idx: param.sku!\r\n    }\r\n  });\r\n  const [addCard, { loading: mutLoad }] = useMutation<\r\n    UpsertCardType[\"UpsertCard\"],\r\n    UpsertCardType[\"UpsertCardVars\"]\r\n  >(UPSERT_CARD, {\r\n    onCompleted: (data) => {\r\n      if (data.upsertCard) {\r\n        setSuccess(\"TRUE\");\r\n      } else setSuccess(\"FALSE\");\r\n    },\r\n    onError: (error1) => {\r\n      setError(error1);\r\n    }\r\n  });\r\n\r\n  if (loading || mutLoad) return <Spinner />;\r\n  if (error) return <ErrorQueryAdmin error={error} />;\r\n  if (!data) return <div>Данные не были получены.</div>;\r\n  if (success === \"TRUE\")\r\n    return <SuccessMutationAdmin goBack={\"/admin/products\"} />;\r\n  if (success === \"FALSE\" || isError)\r\n    return (\r\n      <ErrorMutationAdmin\r\n        error={isError || new Error(\"Отказано в совершении операции.\")}\r\n        tryAgain={() => setSuccess(\"\")}\r\n      />\r\n    );\r\n  return (\r\n    <>\r\n      <div className=\"pt-3 pb-2 mb-3 border-bottom\">\r\n        <h2 className=\"h2\">Редактировать услугу</h2>\r\n      </div>\r\n      <div className=\"py-3 text-center\">\r\n        <p className=\"lead\">\r\n          Измените значения в полях формы, что представлена ниже. Нажмите кнопку\r\n          \"Сохранить\".\r\n        </p>\r\n      </div>\r\n      <div className=\"row pb-5\">\r\n        <div className=\"col-md-7 col-lg-8\">\r\n          <h4 className=\"mb-3\">Новые данные</h4>\r\n          <Form card={data.getCards[0]} addCard={addCard} />\r\n          <DeleteCard\r\n            card={data.getCards[0]}\r\n            setSuccess={setSuccess}\r\n            setError={setError}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditCard;\r\n"],"sourceRoot":""}