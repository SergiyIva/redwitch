{"version":3,"sources":["Hooks/useOnScreen.ts","Main/Pages/Home/Cards/Card/Styles.ts","Main/Pages/Home/Cards/Card/Card.tsx","Main/Pages/Home/Cards/CardsWrapper.tsx","Main/Pages/Home/Cards/Cards.tsx","Components/CurveLine/Styles.ts","Components/CurveLine/CurveLine.tsx","Main/Pages/Home/CardContainer/Styles.ts","Main/Pages/Home/CardContainer/CardContainer.tsx","Main/Pages/Home/ProjectSteps/Styles.ts","Main/Pages/Home/ProjectSteps/Step/Styles.ts","Main/Pages/Home/ProjectSteps/Step/Step.tsx","Main/Pages/Home/ProjectSteps/ProjectSteps.tsx","Main/Pages/Home/Hero/Styles.ts","Main/Pages/Home/Hero/Hero.tsx","Main/Pages/Home/Contact/Styles.ts","Main/Pages/Home/Contact/ProcessContact/Form/Styles.ts","Main/Pages/Home/Contact/ProcessContact/Form/Inputs/PhoneSample.tsx","Main/Pages/Home/Contact/ProcessContact/Form/Form.tsx","Main/Pages/Home/Contact/ProcessContact/ContactError/Styles.ts","Main/Pages/Home/Contact/ProcessContact/ThankYou/ThankYou.tsx","Main/Pages/Home/Contact/ProcessContact/ContactError/ContactError.tsx","Main/Pages/Home/Contact/ProcessContact/Styles.ts","Main/Pages/Home/Contact/ProcessContact/ProcessContact.tsx","Main/Pages/Home/Contact/Contact.tsx","Main/Pages/Home/About/Items/Item/Styles.ts","Main/Pages/Home/About/Items/Item/Item.tsx","Main/Pages/Home/About/Items/ItemsWrapper.tsx","Main/Pages/Home/About/Items/Items.tsx","Main/Pages/Home/About/Styles.ts","Main/Pages/Home/About/About.tsx","Main/Pages/Home/Home.tsx"],"names":["useOnScreen","ref","rootMargin","useState","isIntersecting","setIntersecting","useEffect","observer","IntersectionObserver","entry","current","observe","unobserve","Wrapper","styled","div","$animated","$index","css","slideToView","Card","index","card","animated","className","src","process","srcImg","alt","name","width","height","describe","type","onClick","orderSKUVar","sku","CardsWrapper","cards","useRef","console","log","map","c","i","id","Cards","useQuery","GET_SERVICE_CARDS","data","error","loading","Spinner","message","getCards","isAbs","CurveLine","color","bgColor","version","xmlns","x","y","viewBox","enableBackground","xmlSpace","style","backgroundColor","fill","stroke","strokeMiterlimit","d","Section","section","CardContainer","children","MainHeading","h2","slideToViewText","SubMainHeading","h3","Timeline","ul","multBy","theme","colors","saturatlessGreen","getTransition","media","iPad","SpecialHeading","h4","PC","Elt","li","ImageContainer","isSpecial","growBubble","Panel","isInvert","Heading","Paragraph","p","SubHeading","Step","setStep","item","title","subtitle","ProjectSteps","step","specRef","specialAnimated","uri","Hero","slideContactVar","href","Divider","revert","FirstDivider","isFirst","SecondDivider","Textarea","textarea","BtnsWrapper","ButtonBack","Warning","label","CheckDivider","isVisible","isTransDown","bigMobile","InfoLabel","CheckLabel","PhoneSample","value","change","phone","getPhone","useCallback","valueArr","length","mask","join","placeholder","onFocus","e","target","replace","trim","onBlur","onChange","required","Form","action","useFormInput","email","checkbox","formValue","reset","validMessages","setValidMessages","triggerFocus","useReactiveVar","isFirstStage","setFirstStage","focus","validation","useMemo","getValidation","optional","checkValid","messages","valid","isValid","debouncedFn","debounce","onType","onSubmit","preventDefault","variables","subscriber","method","role","htmlFor","HTMLButtonElement","blur","HeadingSuccess","brandGreen","Describe","ThankYou","ContactError","isHidden","StateDivider","ProcessContact","useMutation","ADD_CALL_ORDER","onCompleted","addCallorder","setSuccess","sendForm","success","Contact","IconDivider","Item","icon","description","ItemsWrapper","items","f","Items","GET_FEATURES","getFeatures","h1","About","Home"],"mappings":"mhMAEaA,GAAc,SACzBC,GAEa,IADbC,EACY,uDADS,MAGrB,EAA0CC,qBAAS,GAAnD,oBAAOC,EAAP,KAAuBC,EAAvB,KAqBA,OApBAC,sBAAU,WACR,IAAMC,EAAW,IAAIC,sBACnB,YAAc,IAAZC,EAAW,qBAINA,EAAML,gBACXC,EAAgBI,EAAML,kBAExB,CACEF,eAMJ,OAHID,EAAIS,SACNH,EAASI,QAAQV,EAAIS,SAEhB,WACLH,EAASK,UAAUX,EAAIS,YAExB,IACIN,G,kCCrBIS,GAAUC,KAAOC,IAAV,4DAEhB,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,OAAd,OACAD,GACAE,aADS,uKAGMC,KACe,GAATF,M,QCJZG,GAAO,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,SAClC,OACE,eAAC,GAAD,CAAWP,UAAWO,EAAUN,OAAQI,EAAOG,UAAU,MAAzD,SACE,uBAAKA,UAAU,iBAAf,UACE,sBACEC,IAAG,UAXDC,wBAWC,OAAWJ,EAAKK,QACnBC,IAAKN,EAAKO,KACVL,UAAU,2CACVM,MAAM,OACNC,OAAO,MACP,oCAA4BT,EAAKO,QAEnC,uBAAKL,UAAU,YAAf,UACE,8BAAKF,EAAKO,OACV,oBAAGL,UAAU,YAAb,SAA0BF,EAAKU,WAC/B,sBAAKR,UAAU,oDAAf,SACE,sBAAKA,UAAU,YAAf,SACE,yBACES,KAAK,SACLT,UAAU,iCACV,iBAAgB,QAChB,iBAAgB,sBAChBU,QAAS,kBAAMC,aAAYb,EAAKc,MALlC,2ECpBDC,GAAe,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MACvBrC,EAAMsC,oBACNhB,EAAWvB,GAA4BC,EAAK,UAKlD,OAHAK,sBAAU,WACRkC,QAAQC,IAAI,eACX,CAAClB,IAEF,sBAAKC,UAAU,iDAAiDvB,IAAKA,EAArE,SACGqC,EAAMI,KAAI,SAACC,EAAGC,GAAJ,OACT,eAAC,GAAD,CAAMtB,KAAMqB,EAAcpB,SAAUA,EAAUF,MAAOuB,GAAjCD,EAAEE,UCZjBC,GAAQ,WACnB,MAAiCC,YAA0BC,MAAnDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAFA,EAAqBC,QAED,eAACC,GAAA,EAAD,IAEhBF,EAAc,+BAAMA,EAAMG,UACzBJ,EACE,eAAC,GAAD,CAAcX,MAAOW,EAAKK,WADf,8ICPPzC,GAAUC,KAAOC,IAAV,qCAChB,qBAAGwC,OAEHrC,aADK,oFCAIsC,GAAY,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,QAASH,EAA4B,EAA5BA,MAC1C,OACE,eAAC,GAAD,CAAWA,MAAOA,EAAlB,SACE,uBACEV,GAAG,gBACHc,QAAQ,MACRC,MAAM,6BACNC,EAAE,MACFC,EAAE,MACFC,QAAQ,cACRC,iBAAiB,kBACjBC,SAAS,WACTzC,UAAW,aACX0C,MAAO,CAAEC,gBAAiBT,GAAW,eAVvC,UAYE,uBAAMU,KAAMX,EAAOY,OAAO,UAAUC,iBAAiB,KAAKC,EAAE,UAC5D,uBAAMH,KAAMX,EAAOc,EAAE,kDCpBhBC,GAAU1D,KAAO2D,QAAV,sECEPC,GAAgB,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,SAC9B,OACE,gBAAC,GAAD,CAAWnD,UAAU,+BAA+BqB,GAAI,WAAxD,UACE,sBAAKrB,UAAU,aAAf,SAA6BmD,IAC7B,eAAC,GAAD,CAAWlB,MAAO,2B,mBCJXe,GAAU1D,KAAO2D,QAAV,gKAWPG,GAAc9D,KAAO+D,GAAV,+KAOpB,qBAAG7D,WAEHE,aADS,wIAGM4D,SAINC,GAAiBjE,KAAOkE,GAAV,qYAUvB,qBAAGhE,WAEHE,aADS,wIAGM4D,SAONG,GAAWnE,KAAOoE,GAAV,6XAaP,mBAAyB,GAAzB,EAAGC,UAEO,qBAAGC,MAAkBC,OAAOC,mBAC9CC,aAAc,IAAK,WAED,qBAAGH,MAAkBI,MAAMC,QAMtCC,GAAiB5E,KAAO6E,GAAV,2VAOL,qBAAGP,MAAkBI,MAAMC,QAK3B,qBAAGL,MAAkBI,MAAMI,MCpFpCC,GAAM/E,KAAOgF,GAAV,2VAcM,qBAAGV,MAAkBI,MAAMC,QAI3B,qBAAGL,MAAkBI,MAAMI,MAQpCG,GAAiBjF,KAAOC,IAAV,yhBASL,qBAAGqE,MAAkBC,OAAOC,oBAE5B,gBAAGU,EAAH,EAAGA,UAAWZ,EAAd,EAAcA,MAAd,OAClBY,EAAY,oBAAsBZ,EAAMC,OAAOC,oBAE/C,qBAAGtE,WAEHE,aADS,uIAGM+E,SAIG,qBAAGb,MAAkBI,MAAMC,QAO3B,qBAAGL,MAAkBI,MAAMI,MAYpCM,GAAQpF,KAAOC,IAAV,oWAOd,qBAAGC,WAEHE,aADS,uKAGM4D,SAIG,qBAAGM,MAAkBI,MAAMC,QAK3C,qBAAGU,UAEHjF,aADQ,4HAOQ,qBAAGkE,MAAkBI,MAAMI,MAIpCQ,GAAUtF,KAAO6E,GAAV,gFAIPU,GAAYvF,KAAOwF,EAAV,2DAGTC,GAAazF,aAAOsF,GAAPtF,CAAH,kDCnGV0F,GAAO,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,KAAM9D,EAAmB,EAAnBA,EAC9B3C,EAAMsC,oBACNhB,EAAWvB,GAA2BC,EAAK,UAIjD,OAHAK,sBAAU,WACJiB,GAAUkF,MACb,CAAClF,IAEF,gBAAC,GAAD,CAAOtB,IAAKA,EAAZ,UACE,eAAC,GAAD,CAAkBe,UAAWO,EAA7B,SACE,sBACEC,UAAU,2BACVC,IAlBEC,uBAkBSgF,EAAKjF,IAChBG,IAAK8E,EAAKC,UAGd,gBAAC,GAAD,CAASR,SAAUvD,EAAI,GAAK,EAAG5B,UAAWO,EAA1C,UACE,iCACE,eAAC,GAAD,UAAYmF,EAAKC,QACjB,eAAC,GAAD,UAAeD,EAAKE,cAEtB,+BACE,eAAC,GAAD,UAAcF,EAAK1E,oBCvBhB6E,GAAe,WAC1B,MAAwB1G,oBAAS,GAAjC,oBAAO2G,EAAP,KAAaL,EAAb,KACMxG,EAAMsC,oBACNwE,EAAUxE,oBACVhB,EAAWvB,GAA4BC,EAAK,UAC5C+G,EAAkBhH,GAA2B+G,EAAS,UAI5D,OAHAzG,sBAAU,WACJ0G,GAAiBP,EAAQ,KAC5B,CAACO,IAEF,gBAAC,GAAD,CACExF,UAAU,kCACVqB,GAAG,UACH5C,IAAKA,EAHP,UAKE,uBAAKuB,UAAU,YAAf,UACE,uBAAKA,UAAU,cAAf,UACE,eAAC,GAAD,CAAeA,UAAU,iBAAiBR,UAAWO,EAArD,uFAGA,eAAC,GAAD,CAAkBP,UAAWO,EAA7B,qSAIF,gBAAC,GAAD,CAAY4D,OAAQ2B,EAApB,UACG7D,GAAKP,KAAI,SAACgE,EAAM9D,GAAP,OACR,eAAC,GAAD,CACE8D,KAAMA,EACN9D,EAAGA,EAEH6D,QAAS,WACH7D,EAAIkE,GAAML,EAAQ7D,KAFnB8D,EAAKC,UAMd,eAACd,GAAD,CAAK5F,IAAK8G,EAAV,SACE,eAAChB,GAAD,CAAgBC,WAAW,EAAMhF,UAAWgG,EAA5C,SACE,gBAAC,GAAD,kDAEE,wBAFF,+DAIE,wBAJF,qDAWR,eAAC,GAAD,CAAWvD,MAAO,aCpDXe,GAAU1D,KAAO2D,QAAV,2kBAMMwC,0CCLbC,GAAO,WAElB,OACE,gBAAC,GAAD,CAAW1F,UAAU,6BAArB,UACE,sBAAKA,UAAU,eAAf,SACE,uBACEA,UAAU,oCACV0C,MACE,GAHJ,UAQE,qBAAI1C,UAAU,sBAAd,0GACA,oBAAGA,UAAU,qBAAb,moDAOA,+BACE,yBACEA,UAAU,4BACVU,QAAS,kBAAMiF,aAAgBA,eAAoB,IAFrD,oGAMA,oBAAGC,KAAK,UAAU5F,UAAU,oCAA5B,+CAMN,eAAC,GAAD,CAAWiC,MAAO,2BClCXe,GAAU1D,KAAO2D,QAAV,2WAQMwC,2CASbI,GAAUvG,KAAOC,IAAV,4fAKT,qBAAGqE,MAAkBC,OAAOiC,UAQnC,qBAAGtG,WAEHE,aADS,2JAIMC,SAGG,qBAAGiE,MAAkBI,MAAMC,QAI3B,qBAAGL,MAAkBI,MAAMI,M,+CC7CpC/E,GAAUC,KAAOC,IAAV,8JAYPwG,GAAezG,KAAOC,IAAV,oHAIC,qBAAGyG,QAAyB,GAAK,MACvDjC,aAAc,IAAK,YAAa,aAGvBkC,GAAgB3G,KAAOC,IAAV,oHAIA,qBAAGyG,QAAyB,IAAM,IACxDjC,aAAc,IAAK,YAAa,aAEvBmC,GAAW5G,KAAO6G,SAAV,uEAIRC,GAAc9G,KAAOC,IAAV,wJAOX8G,GAAa/G,KAAOC,IAAV,yEACV,qBAAGyG,QAAyB,EAAI,KAC7B,qBAAGA,QAAyB,SAAW,YACnDjC,aAAc,IAAK,UAAW,SAErBuC,GAAUhH,KAAOiH,MAAV,mHAUPC,GAAelH,KAAOC,IAAV,mJACT,qBAAGkH,UAA6B,UAAY,YAC/C,qBAAGA,UAA6B,EAAI,KAI7C,qBAAGC,aAEHhH,aADW,oOAGW,qBAAGkE,MAAkBI,MAAM2C,aAG3B,qBAAG/C,MAAkBI,MAAMC,UAKjDF,aAAc,IAAK,CAAC,YAAa,aAAc,WAAY,SAElD6C,GAAYtH,KAAOiH,MAAV,mIAOTM,GAAavH,aAAOsH,GAAPtH,CAAH,8DACZ,qBAAGsE,MAAkBC,OAAOC,oB,SC5E1BgD,GAAc,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,MAAOlF,EAAwC,EAAxCA,QAASmF,EAA+B,EAA/BA,OACtCC,EAAQlG,oBACRmG,EAAWC,wBAAY,WAC3B,IAAMC,EAAQ,aAAOL,GACrB,IAAKA,EAAMM,OAAQ,MAAO,iBAC1B,IAAMC,EAAO,CAAC,KAcd,OAbAA,EAAK,GAAKF,EAAS,IAAM,IACzBE,EAAK,GAAKF,EAAS,IAAM,IACzBE,EAAK,GAAKF,EAAS,IAAM,IACzBE,EAAK,GAAK,IACVA,EAAK,GAAK,IACVA,EAAK,GAAKF,EAAS,IAAM,IACzBE,EAAK,GAAKF,EAAS,IAAM,IACzBE,EAAK,GAAKF,EAAS,IAAM,IACzBE,EAAK,GAAK,IACVA,EAAK,IAAMF,EAAS,IAAM,IAC1BE,EAAK,IAAMF,EAAS,IAAM,IAC1BE,EAAK,IAAMF,EAAS,IAAM,IAC1BE,EAAK,IAAMF,EAAS,IAAM,IACnBE,EAAKC,KAAK,MAChB,CAACR,IAQJ,OACE,wBACEtI,IAAKwI,EACL5G,KAAK,QACLI,KAAK,OACLT,UAAS,uBACP6B,IAAwB,YAAZA,EAAwB,WAAa,eAEnDR,GAAG,QACHmG,YAAY,gBACZT,MAAOA,EACPU,QAlBY,SAACC,GACfT,EAAM/H,QAAQ6H,MAAQW,EAAEC,OAAOZ,MAAMa,QAAQ,cAAe,IAAIC,QAkB9DC,OAhBW,WACbb,EAAM/H,QAAQ6H,MAAQG,KAgBpBa,SAAUf,EACVgB,UAAQ,K,mBCnBDC,GAAO,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OACrB,EAA2BC,aAAa,CACtC9H,KAAM,GACN4G,MAAO,GACPmB,MAAO,GACPC,SAAU,QACVxG,QAAS,KALX,oBAAOyG,EAAP,KAAkBC,EAAlB,KAOA,EAA0C5J,oBAA0B,MAApE,oBAAO6J,EAAP,KAAsBC,EAAtB,KACMpI,EAAOU,oBACP2H,EAAeC,aAAehD,MACpC,EAAsChH,qBAAS,GAA/C,oBAAOiK,EAAP,KAAqBC,EAArB,KACA/J,sBAAU,WACJ4J,IACFrI,EAAKnB,QAAQ4J,QACb9H,QAAQC,IAAI,YAEb,CAACyH,IAEJ,IAAMK,EAAaC,oBACjB,kBACEC,aAAc,CACZC,SAAU,CAAC,QAAS,eAExB,IAEIC,EAAahC,wBACjB,SACEO,EACA0B,GAEA,IAAMC,EAAQN,EAAW,gBACtBrB,EAAEC,OAAOtH,KAAOqH,EAAEC,OAAOZ,QAE5B0B,EAAiB,6BACZW,GADW,iBAEdE,QAASD,EAAMC,SACd5B,EAAEC,OAAOtH,KAAOgJ,EAAM3B,EAAEC,OAAOtH,WAGpC,IAEIkJ,EAAcP,oBAClB,kBACEQ,qBACE,SACE9B,EACA0B,GAEAD,EAAWzB,EAAG0B,KAEhB,OAEJ,IAEIK,EAAS,SAAC/B,GACdY,EAAUP,SAASL,GACnB6B,EAAY7B,EAAGc,IAEXkB,EAAWvC,wBACf,SAACO,GACCA,EAAEiC,iBACF,IAAMN,EAAQN,EAAW,gBACpBT,EAAUvB,QAGf,GADA0B,EAAiBY,GACbA,EAAMC,QAAS,CACjB,GAAIV,EAEF,YADAC,GAAc,GAGhBX,EAAO,CACL0B,UAAU,6BACLtB,EAAUvB,OADN,IAEP8C,WAAyC,SAA7BvB,EAAUvB,MAAMsB,SAC5B7H,SAAU8H,EAAUvB,MAAMlF,YAI9B0G,IAEAM,GAAc,GACd7H,QAAQC,IAAIqH,EAAUvB,UAG1B,CAACuB,EAAUvB,MAAOgC,EAAYH,IAEhC,OACE,sBAAK5I,UAAU,YAAf,SACE,wBAAM0J,SAAUA,EAAUI,OAAO,OAAOC,KAAK,OAA7C,UACE,gBAAC,GAAD,WACE,gBAAC,GAAD,CAAgB/D,QAAS4C,EAAzB,UACE,uBAAK5I,UAAU,yBAAf,UACE,wBACEvB,IAAK4B,EACLI,KAAK,OACLJ,KAAK,OACLL,UAAS,uBACPwI,GACAA,EAAcnI,OACU,YAAvBmI,EAAcnI,KAAqB,WAAa,eAEnDgB,GAAG,aACHmG,YAAY,qBACZT,MAAOuB,EAAUvB,MAAM1G,KACvB0H,SAAU0B,EACVzB,UAAQ,IAEV,eAAC,GAAD,CAAW3G,GAAG,eAAerB,UAAU,mBAAvC,SACGwI,GAAiBA,EAAcnI,UAGpC,sBAAKL,UAAU,yBAAf,SACE,uBAAKA,UAAU,6BAAf,UACE,uBAAMA,UAAW,mBAAjB,gBACA,eAAC,GAAD,CACE+G,MAAOuB,EAAUvB,MAAME,MACvBD,OAAQyC,EACR5H,QAAO,OAAE2G,QAAF,IAAEA,OAAF,EAAEA,EAAevB,QAE1B,eAAC,GAAD,CAAW5F,GAAG,gBAAgBrB,UAAU,mBAAxC,SACGwI,GAAiBA,EAAcvB,aAItC,uBAAKjH,UAAU,yBAAf,UACE,wBACES,KAAK,QACLJ,KAAK,QACLL,UAAS,uBACPwI,GACAA,EAAcJ,QACW,YAAxBI,EAAcJ,MACX,WACA,eAEN/G,GAAG,cACH,mBAAiB,YACjBmG,YAAY,0FACZT,MAAOuB,EAAUvB,MAAMqB,MACvBL,SAAU0B,IAEZ,eAAC,GAAD,CAAWpI,GAAG,gBAAgBrB,UAAU,mBAAxC,SACGwI,GAAiBA,EAAcJ,QAElC,gBAAC,GAAD,CACE/G,GAAG,QACHoF,YAAa6B,EAAUvB,MAAMqB,MAC7B1B,eAEI8B,IACAA,EAAcJ,OACU,YAAxBI,EAAcJ,OAGlBpI,UAAS,aAVX,UAYE,wBACEK,KAAK,WACLI,KAAK,WACLT,UAAU,mBACVqB,GAAG,eACH0F,MAAOuB,EAAUvB,MAAMsB,SACvBN,SAAUO,EAAUP,WAEtB,eAAC,GAAD,CAAciC,QAAQ,eAAtB,mWAMN,eAAC,GAAD,CAAiBhE,QAAS4C,EAA1B,SACE,uBAAK5I,UAAU,OAAf,UACE,eAAC,GAAD,CACEK,KAAK,UACLL,UAAU,eACV,aAAW,gBACX+G,MAAOuB,EAAUvB,MAAMlF,QACvBkG,SAAUO,EAAUP,SACpBP,YAAa,6IAEf,sBAAKnG,GAAG,cAAcrB,UAAU,YAAhC,sOAMN,gBAAC,GAAD,WACE,eAAC,GAAD,CACEgG,QAAS4C,EACTvH,GAAG,aACHrB,UAAS,kBACTU,QAAS,WACPmI,GAAc,GACd7H,QAAQC,IAAI,SANhB,4CAWA,yBACEI,GAAG,YACHZ,KAAK,SACLT,UAAS,4BACLsI,EAAUvB,MAAM1G,OAASiI,EAAUvB,MAAME,QAAU,YAEvDvG,QAAS,SAACgH,GACJA,EAAEC,kBAAkBsC,mBACtBvC,EAAEC,OAAOuC,QARf,SAYGtB,EAAe,iCAAU,8DAG9B,eAAC,GAAD,CAAavH,GAAG,YAAYrB,UAAU,YAAtC,mPClPK4E,GAAUtF,KAAO+D,GAAV,uFAIP8G,GAAiB7K,aAAOsF,GAAPtF,CAAH,4CAChB,qBAAGsE,MAAkBC,OAAOuG,cAE1BC,GAAW/K,KAAOwF,EAAV,oEACV,qBAAGlB,MAAkBC,OAAOC,oBCR1BwG,GAAW,WACtB,OACE,uBAAKtK,UAAU,kBAAf,UACE,eAAC,GAAD,+IACA,eAAC,GAAD,kbAIA,oBAAG4F,KAAK,KAAR,sDCTO2E,GAAe,WAC1B,OACE,uBAAKvK,UAAU,iBAAf,UACE,eAAC,GAAD,0GACA,eAAC,GAAD,qLACA,eAAC,GAAD,iN,SCAOX,GAAUC,KAAOC,IAAV,iDACJ,qBAAGiL,SAA2B,SAAW,aAE5CC,GAAenL,KAAOC,IAAV,wNAST,qBAAGiL,SAA2B,SAAW,aAC5C,qBAAGA,SAA2B,IAAM,MAC7CzG,aAAc,IAAK,CAAC,UAAW,cAAe,SAErCa,GAAUtF,KAAO+D,GAAV,4EAIPgH,GAAW/K,KAAOwF,EAAV,yFAGV,qBAAGlB,MAAkBC,OAAOC,oBCiBxB4G,GAlCQ,WACrB,MAAuCC,aAGrCC,KAAgB,CAChBC,YAAa,SAACpJ,GACRA,EAAKqJ,aAAcC,EAAW,QAC7BA,EAAW,YANpB,oBAAOC,EAAP,YAAmBrJ,EAAnB,EAAmBA,QAASD,EAA5B,EAA4BA,MAS5B,EAA8B/C,oBAAS,IAAvC,oBAAOsM,EAAP,KAAgBF,EAAhB,KAEA,OACE,uCACE,gBAAC,GAAD,CAAgBP,UAAW7I,GAAuB,KAAZsJ,IAAmBvJ,EAAzD,UACGC,GAAW,eAACC,GAAA,EAAD,IACC,SAAZqJ,GAAsB,eAAC,GAAD,IACV,UAAZA,GAAwBvJ,GAAS,eAAC,GAAD,OAEpC,gBAAC,GAAD,CACE8I,SACE7I,GAAuB,SAAZsJ,GAAkC,UAAZA,KAAyBvJ,EAF9D,UAKE,eAAC,GAAD,qGACA,eAAC,GAAD,uXAGA,eAAC,GAAD,CAAMwG,OAAQ8C,WClCTE,GAAU,WACrB,IAAMzM,EAAMsC,oBACNhB,EAAWvB,GAA4BC,EAAK,UAClD,OACE,gBAAC,GAAD,CAAWuB,UAAU,wBAAwBqB,GAAI,UAAjD,UACE,eAAC,GAAD,CAAW7B,UAAWO,EAAUtB,IAAKA,EAArC,SACE,eAAC,GAAD,MAEF,eAAC,GAAD,CAAWwD,MAAO,0BCRX5C,GAAUC,KAAOC,IAAV,4DAEhB,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,OAAd,OACAD,GACAE,aADS,uKAGMC,KACe,GAATF,EAAc,QAK1BmF,GAAUtF,KAAO+D,GAAV,4DAIP8H,GAAc7L,KAAOC,IAAV,kFAOXsF,GAAYvF,KAAOwF,EAAV,2D,UCGTsG,GAAO,SAAC,GAAsC,IArB1C/J,EAqBM6D,EAAmC,EAAnCA,KAAM9D,EAA6B,EAA7BA,EAAGrB,EAA0B,EAA1BA,SAC9B,OACE,qCACE,gBAAC,GAAD,CACEP,UAAWO,EACXN,OAAQ2B,EACRpB,UAAU,+BAHZ,UAKE,sBAAKA,UAAU,oDAAf,SACE,eAAC,GAAD,CAAeA,UAAU,KAAzB,UA9BOqB,EA8BgC6D,EAAKmG,KA7BzC,SAAPhK,EACK,eAAC,KAAD,IACS,UAAPA,EACF,eAAC,KAAD,IACS,SAAPA,EACF,eAAC,KAAD,IACS,SAAPA,EACF,eAAC,KAAD,IACS,SAAPA,EACF,eAAC,KAAD,IAEA,eAAC,KAAD,SAoBH,iCACE,eAAC,GAAD,UAAY6D,EAAKC,QACjB,eAAC,GAAD,UAAcD,EAAKoG,uBCrChBC,GAAe,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MACvB/M,EAAMsC,oBACNhB,EAAWvB,GAA4BC,EAAK,UAClD,OACE,sBAAKuB,UAAU,wCAAwCvB,IAAKA,EAA5D,SACG+M,EAAMtK,KAAI,SAACuK,EAAGrK,GAAJ,OACT,eAAC,GAAD,CAAM8D,KAAMuG,EAAc1L,SAAUA,EAAUqB,EAAGA,GAA7BqK,EAAEpK,UCTjBqK,GAAQ,WACnB,MAAiCnK,YAAsBoK,MAA/ClK,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASD,EAAvB,EAAuBA,MAEvB,OAAIC,EAAgB,eAACC,GAAA,EAAD,IAChBF,EAAc,+BAAMA,EAAMG,UACzBJ,EACE,eAAC,GAAD,CAAc+J,MAAO/J,EAAKmK,cADf,6FCLPhH,GAAUtF,KAAOuM,GAAV,6JAMhB,qBAAGrM,WAEHE,aADS,wIAGM4D,SCUJwI,GAlBD,WACZ,IAAMrN,EAAMsC,oBACNhB,EAAWvB,GAA4BC,EAAK,UAClD,OACE,qCACE,2BAASuB,UAAU,yBAAyBqB,GAAG,QAA/C,UACE,uBAAKrB,UAAW,YAAavB,IAAKA,EAAlC,UACE,eAAC,GAAD,CAAWuB,UAAU,OAAOR,UAAWO,EAAvC,8BAGA,eAAC,GAAD,OAEF,eAAC,GAAD,CAAWkC,MAAO,0BCMX8J,UAlBF,WACX,OACE,uCACE,eAAC,GAAD,IAEA,eAAC,GAAD,UACE,eAAC,GAAD,MAGF,eAAC,GAAD,IAEA,eAAC,GAAD,IAEA,eAAC,GAAD","file":"static/js/6.aa2b2d20.chunk.js","sourcesContent":["import { MutableRefObject, useEffect, useState } from \"react\";\r\n\r\nexport const useOnScreen = <T extends Element>(\r\n  ref: MutableRefObject<T>,\r\n  rootMargin: string = \"0px\"\r\n): boolean => {\r\n  // State and setter for storing whether element is visible\r\n  const [isIntersecting, setIntersecting] = useState(false);\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        // Update our state when observer callback fires\r\n        //setIntersecting(entry.isIntersecting);\r\n        // *От меня* only one way toggle\r\n        if (!entry.isIntersecting) return;\r\n        setIntersecting(entry.isIntersecting);\r\n      },\r\n      {\r\n        rootMargin\r\n      }\r\n    );\r\n    if (ref.current) {\r\n      observer.observe(ref.current);\r\n    }\r\n    return () => {\r\n      observer.unobserve(ref.current);\r\n    };\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n  return isIntersecting;\r\n};\r\n","import styled, { css } from \"styled-components\";\r\nimport { slideToView } from \"../../../../../Styles/animations\";\r\n\r\ntype WrapperProps = {\r\n  $index: number;\r\n  $animated: boolean;\r\n};\r\nexport const Wrapper = styled.div<WrapperProps>`\r\n  visibility: hidden;\r\n  ${({ $animated, $index }) =>\r\n    $animated &&\r\n    css`\r\n      visibility: visible;\r\n      animation: ${slideToView} 0.5s ease-out;\r\n      animation-delay: ${$index * 50}ms;\r\n      animation-fill-mode: backwards;\r\n    `};\r\n`;\r\n","import { Cardservice } from \"../../../../../GraphQL/typeDefs\";\r\nimport { orderSKUVar } from \"../../../../../GraphQL/Cache\";\r\nimport * as S from \"./Styles\";\r\n\r\nconst uri = process.env.REACT_APP_URI;\r\ntype CardProps = {\r\n  index: number;\r\n  card: Cardservice;\r\n  animated: boolean;\r\n};\r\nexport const Card = ({ index, card, animated }: CardProps) => {\r\n  return (\r\n    <S.Wrapper $animated={animated} $index={index} className=\"col\">\r\n      <div className=\"card shadow-sm\">\r\n        <img\r\n          src={`${uri}${card.srcImg}`}\r\n          alt={card.name}\r\n          className=\"bd-placeholder-img card-img-top img-card\"\r\n          width=\"100%\"\r\n          height=\"225\"\r\n          aria-label={`Placeholder: ${card.name}`}\r\n        />\r\n        <div className=\"card-body\">\r\n          <h5>{card.name}</h5>\r\n          <p className=\"card-text\">{card.describe}</p>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div className=\"btn-group\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-outline-success\"\r\n                data-bs-toggle={\"modal\"}\r\n                data-bs-target={\"#staticBackdropLive\"}\r\n                onClick={() => orderSKUVar(card.sku)}\r\n              >\r\n                Оформить\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </S.Wrapper>\r\n  );\r\n};\r\n","import { MutableRefObject, useEffect, useRef } from \"react\";\r\nimport { useOnScreen } from \"../../../../Hooks/useOnScreen\";\r\nimport { Card } from \"./Card/Card\";\r\nimport { Cardservice } from \"../../../../GraphQL/typeDefs\";\r\ntype CardsWrapperProps = {\r\n  cards: Cardservice[];\r\n};\r\nexport const CardsWrapper = ({ cards }: CardsWrapperProps) => {\r\n  const ref = useRef() as MutableRefObject<HTMLDivElement>;\r\n  const animated = useOnScreen<HTMLDivElement>(ref, \"-200px\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"run anime\");\r\n  }, [animated]);\r\n  return (\r\n    <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3\" ref={ref}>\r\n      {cards.map((c, i) => (\r\n        <Card card={c} key={c.id} animated={animated} index={i} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { useQuery } from \"@apollo/client\";\nimport { GET_SERVICE_CARDS, GetServiceCards } from \"../../../../GraphQL/Query\";\nimport { Spinner } from \"../../../../Components/Spinner/Spinner\";\nimport { CardsWrapper } from \"./CardsWrapper\";\n\nexport const Cards = () => {\n  const { data, error, loading } = useQuery<GetServiceCards>(GET_SERVICE_CARDS);\n\n  if (loading) return <Spinner />;\n  //TODO экран ошибки запроса пользователя\n  if (error) return <div>{error.message}</div>;\n  if (!data) return <div>Нет доступных услуг!</div>;\n  return <CardsWrapper cards={data.getCards} />;\n};\n","import styled, { css } from \"styled-components\";\r\ntype WrapperProps = {\r\n  isAbs?: boolean;\r\n};\r\nexport const Wrapper = styled.div<WrapperProps>`\r\n  ${({ isAbs }) =>\r\n    isAbs &&\r\n    css`\r\n      position: relative;\r\n      bottom: -7px;\r\n    `};\r\n`;\r\n","import * as S from \"./Styles\";\r\ntype CurveLineProps = {\r\n  color: string;\r\n  bgColor?: string;\r\n  isAbs?: boolean;\r\n};\r\nexport const CurveLine = ({ color, bgColor, isAbs }: CurveLineProps) => {\r\n  return (\r\n    <S.Wrapper isAbs={isAbs}>\r\n      <svg\r\n        id=\"curveUpColor2\"\r\n        version=\"1.1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        x=\"0px\"\r\n        y=\"0px\"\r\n        viewBox=\"0 0 1500 20\"\r\n        enableBackground=\"new 0 0 1500 20\"\r\n        xmlSpace=\"preserve\"\r\n        className={\"curve-line\"}\r\n        style={{ backgroundColor: bgColor || \"transparent\" }}\r\n      >\r\n        <path fill={color} stroke=\"#231F20\" strokeMiterlimit=\"10\" d=\"M0,20\" />\r\n        <path fill={color} d=\"M0,20C0,20,348,5,750,5s750,15,750,15H0z\" />\r\n      </svg>\r\n    </S.Wrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Section = styled.section`\r\n  background-color: hsl(152, 17%, 98%);\r\n`;\r\n","import { PropsWithChildren } from \"react\";\r\nimport { CurveLine } from \"../../../../Components/CurveLine/CurveLine\";\r\nimport * as S from \"./Styles\";\r\n\r\nexport const CardContainer = ({ children }: PropsWithChildren<any>) => {\r\n  return (\r\n    <S.Section className=\"album py-5 position-relative\" id={\"services\"}>\r\n      <div className=\"container \">{children}</div>\r\n      <CurveLine color={\"hsl(152, 90%, 18%)\"} />\r\n    </S.Section>\r\n  );\r\n};\r\n","import styled, { css } from \"styled-components\";\r\nimport { slideToViewText } from \"../../../../Styles/animations\";\r\nimport { getTransition } from \"../../../../Styles/utilites\";\r\n\r\nexport const Section = styled.section`\r\n  background: linear-gradient(\r\n    0,\r\n    hsl(145, 80%, 25%) 0,\r\n    hsl(152, 90%, 18%) 95%,\r\n    hsl(152, 90%, 18%) 100%\r\n  );\r\n`;\r\ntype SectionProps = {\r\n  $animated: boolean;\r\n};\r\nexport const MainHeading = styled.h2<SectionProps>`\r\n  font-size: 2.5rem;\r\n  margin-top: 0;\r\n  margin-bottom: 1rem;\r\n  font-weight: 700;\r\n  color: hsl(152, 17%, 98%);\r\n  visibility: hidden;\r\n  ${({ $animated }) =>\r\n    $animated &&\r\n    css`\r\n      visibility: visible;\r\n      animation: ${slideToViewText} 0.5s ease-out;\r\n      animation-fill-mode: backwards;\r\n    `};\r\n`;\r\nexport const SubMainHeading = styled.h3<SectionProps>`\r\n  font-size: 1rem;\r\n  font-weight: 400;\r\n  font-style: italic;\r\n  font-family: \"Roboto Slab\", -apple-system, BlinkMacSystemFont, \"Segoe UI\",\r\n    Roboto, \"Helvetica Neue\", Arial, sans-serif, \"Apple Color Emoji\",\r\n    \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\r\n  margin-bottom: 4rem;\r\n  color: hsl(152, 30%, 87%);\r\n  visibility: hidden;\r\n  ${({ $animated }) =>\r\n    $animated &&\r\n    css`\r\n      visibility: visible;\r\n      animation: ${slideToViewText} 0.5s ease-out;\r\n      animation-fill-mode: backwards;\r\n    `};\r\n`;\r\ntype TimelineProps = {\r\n  multBy: number;\r\n};\r\nexport const Timeline = styled.ul<TimelineProps>`\r\n  position: relative;\r\n  padding: 0;\r\n  list-style: none;\r\n\r\n  ::before {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 40px;\r\n    width: 2px;\r\n    margin-left: -1.5px;\r\n    content: \"\";\r\n    height: ${({ multBy }) => multBy * 25}%;\r\n    //hsl(152, 34%, 40%);\r\n    background-color: ${({ theme }) => theme.colors.saturatlessGreen};\r\n    ${getTransition(500, \"height\")};\r\n\r\n    @media screen and ${({ theme }) => theme.media.iPad} {\r\n      left: 50%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SpecialHeading = styled.h4`\r\n  font-size: 10px;\r\n  line-height: 14px;\r\n  margin-top: 12px;\r\n  font-weight: 700;\r\n  color: hsl(152, 17%, 98%);\r\n\r\n  @media screen and ${({ theme }) => theme.media.iPad} {\r\n    font-size: 13px;\r\n    line-height: 18px;\r\n    margin-top: 16px;\r\n  }\r\n  @media screen and ${({ theme }) => theme.media.PC} {\r\n    font-size: 18px;\r\n    line-height: 26px;\r\n    margin-top: 30px;\r\n  }\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\nimport { growBubble, slideToViewText } from \"../../../../../Styles/animations\";\r\n\r\nexport const Elt = styled.li`\r\n  position: relative;\r\n  min-height: 50px;\r\n  margin-bottom: 50px;\r\n\r\n  ::before,\r\n  ::after {\r\n    display: table;\r\n    content: \" \";\r\n  }\r\n  ::after {\r\n    clear: both;\r\n  }\r\n\r\n  @media screen and ${({ theme }) => theme.media.iPad} {\r\n    min-height: 100px;\r\n    margin-bottom: 100px;\r\n  }\r\n  @media screen and ${({ theme }) => theme.media.PC} {\r\n    min-height: 150px;\r\n  }\r\n`;\r\ntype ImageContainerProps = {\r\n  $animated: boolean;\r\n  isSpecial?: boolean;\r\n};\r\nexport const ImageContainer = styled.div<ImageContainerProps>`\r\n  position: absolute;\r\n  z-index: 10;\r\n  left: 0;\r\n  width: 80px;\r\n  height: 80px;\r\n  margin-left: 0;\r\n  text-align: center;\r\n  color: white;\r\n  border: 5px solid ${({ theme }) => theme.colors.saturatlessGreen};\r\n  border-radius: 100%;\r\n  background-color: ${({ isSpecial, theme }) =>\r\n    isSpecial ? \"hsl(25, 85%, 51%)\" : theme.colors.saturatlessGreen};\r\n  visibility: hidden;\r\n  ${({ $animated }) =>\r\n    $animated &&\r\n    css`\r\n      visibility: visible;\r\n      animation: ${growBubble} 0.75s linear;\r\n      animation-fill-mode: backwards;\r\n    `};\r\n\r\n  @media screen and ${({ theme }) => theme.media.iPad} {\r\n    left: 50%;\r\n    width: 100px;\r\n    height: 100px;\r\n    margin-left: -50px;\r\n    border-width: 6px;\r\n  }\r\n  @media screen and ${({ theme }) => theme.media.PC} {\r\n    width: 150px;\r\n    height: 150px;\r\n    margin-left: -75px;\r\n    border-width: 7px;\r\n  }\r\n`;\r\n\r\ntype PanelProps = {\r\n  isInvert: boolean;\r\n  $animated: boolean;\r\n};\r\nexport const Panel = styled.div<PanelProps>`\r\n  position: relative;\r\n  float: right;\r\n  width: 100%;\r\n  padding: 0 20px 0 100px;\r\n  text-align: left;\r\n  visibility: hidden;\r\n  ${({ $animated }) =>\r\n    $animated &&\r\n    css`\r\n      visibility: visible;\r\n      animation: ${slideToViewText} 0.5s ease-out;\r\n      animation-delay: 150ms;\r\n      animation-fill-mode: backwards;\r\n    `};\r\n  @media screen and ${({ theme }) => theme.media.iPad} {\r\n    float: left;\r\n    width: 41%;\r\n    padding: 0 20px 20px 30px;\r\n    text-align: right;\r\n    ${({ isInvert }) =>\r\n      isInvert &&\r\n      css`\r\n        float: right;\r\n        padding: 0 30px 20px 20px;\r\n        text-align: left;\r\n      `}\r\n  }\r\n  @media screen and ${({ theme }) => theme.media.PC} {\r\n    padding: 0 20px 20px;\r\n  }\r\n`;\r\nexport const Heading = styled.h4`\r\n  color: hsl(152, 17%, 98%);\r\n  font-weight: 700;\r\n`;\r\nexport const Paragraph = styled.p`\r\n  color: hsl(152, 30%, 87%);\r\n`;\r\nexport const SubHeading = styled(Heading)`\r\n  font-weight: 400;\r\n`;\r\n","import * as S from \"./Styles\";\nimport { MutableRefObject, useEffect, useRef } from \"react\";\nimport { useOnScreen } from \"../../../../../Hooks/useOnScreen\";\nconst uri = process.env.REACT_APP_URI;\n\ntype StepProps = {\n  setStep: () => void;\n  item: { src: string; title: string; subtitle: string; describe: string };\n  i: number;\n};\nexport const Step = ({ setStep, item, i }: StepProps) => {\n  const ref = useRef() as MutableRefObject<HTMLLIElement>;\n  const animated = useOnScreen<HTMLLIElement>(ref, \"-200px\");\n  useEffect(() => {\n    if (animated) setStep();\n  }, [animated]);\n  return (\n    <S.Elt ref={ref}>\n      <S.ImageContainer $animated={animated}>\n        <img\n          className=\"rounded-circle img-fluid\"\n          src={uri + item.src}\n          alt={item.title}\n        />\n      </S.ImageContainer>\n      <S.Panel isInvert={i % 2 != 0} $animated={animated}>\n        <div>\n          <S.Heading>{item.title}</S.Heading>\n          <S.SubHeading>{item.subtitle}</S.SubHeading>\n        </div>\n        <div>\n          <S.Paragraph>{item.describe}</S.Paragraph>\n        </div>\n      </S.Panel>\n    </S.Elt>\n  );\n};\n","import { CurveLine } from \"../../../../Components/CurveLine/CurveLine\";\nimport data from \"../../../../LocalData/project-steps.json\";\nimport * as S from \"./Styles\";\nimport { Elt, ImageContainer } from \"./Step/Styles\";\nimport { MutableRefObject, useEffect, useRef, useState } from \"react\";\nimport { useOnScreen } from \"../../../../Hooks/useOnScreen\";\nimport { Step } from \"./Step/Step\";\n\nexport const ProjectSteps = () => {\n  const [step, setStep] = useState(0);\n  const ref = useRef() as MutableRefObject<HTMLDivElement>;\n  const specRef = useRef() as MutableRefObject<HTMLLIElement>;\n  const animated = useOnScreen<HTMLDivElement>(ref, \"-200px\");\n  const specialAnimated = useOnScreen<HTMLLIElement>(specRef, \"-200px\");\n  useEffect(() => {\n    if (specialAnimated) setStep(4);\n  }, [specialAnimated]);\n  return (\n    <S.Section\n      className=\"py-5 green-bg position-relative\"\n      id=\"project\"\n      ref={ref}\n    >\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <S.MainHeading className=\"text-uppercase\" $animated={animated}>\n            Этапы проекта\n          </S.MainHeading>\n          <S.SubMainHeading $animated={animated}>\n            Наглядная демонстрация шагов по реализации проекта.\n          </S.SubMainHeading>\n        </div>\n        <S.Timeline multBy={step}>\n          {data.map((item, i) => (\n            <Step\n              item={item}\n              i={i}\n              key={item.title}\n              setStep={() => {\n                if (i > step) setStep(i);\n              }}\n            />\n          ))}\n          <Elt ref={specRef}>\n            <ImageContainer isSpecial={true} $animated={specialAnimated}>\n              <S.SpecialHeading>\n                Только\n                <br />\n                позитивные\n                <br />\n                эмоции!\n              </S.SpecialHeading>\n            </ImageContainer>\n          </Elt>\n        </S.Timeline>\n      </div>\n      <CurveLine color={\"#fff\"} />\n      {/*<CurveLine color={\"hsl(0, 0%, 13%)\"} isAbs={true} />*/}\n    </S.Section>\n  );\n};\n","import styled from \"styled-components\";\r\n\r\nconst uri = process.env.REACT_APP_URI;\r\n\r\nexport const Section = styled.section`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  max-width: none;\r\n  background-color: #29292b;\r\n  background-image: url(${uri + \"/img/header-bg.jpg\"});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  overflow-x: hidden;\r\n  > div {\r\n    margin-top: 4.5em;\r\n    margin-bottom: 1em;\r\n    padding: 3rem 0;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    > div {\r\n      margin-top: 4.5em;\r\n      margin-bottom: 3.5em;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 992px) {\r\n    > div {\r\n      margin-top: 6.5em;\r\n      margin-bottom: 3.5em;\r\n    }\r\n  }\r\n`;\r\n","import { CurveLine } from \"../../../../Components/CurveLine/CurveLine\";\r\nimport * as S from \"./Styles\";\r\nimport { slideContactVar } from \"../../../../GraphQL/Cache\";\r\n//import { useScrollWindowListener } from \"../../../../Hooks/useScrollWindowListener\";\r\n\r\nexport const Hero = () => {\r\n  //const [pageY] = useScrollWindowListener();\r\n  return (\r\n    <S.Section className=\"py-5 text-center container\">\r\n      <div className=\"row py-lg-5 \">\r\n        <div\r\n          className=\"col-lg-6 col-md-8 mx-auto hero-bg\"\r\n          style={\r\n            {\r\n              //translate: Math.floor(pageY / 2)\r\n            }\r\n          }\r\n        >\r\n          <h1 className=\"fw-light title-main\">Добро пожаловать!</h1>\r\n          <p className=\"lead describe-main\">\r\n            Мы готовы предоставить Вам наивысший уровень креатива и\r\n            технологической новизны для решения любых поставленных задач.\r\n            Индивидуальный подход, приятные цены, скорость и качество выполнения\r\n            проектов - это основа нашей работы! Вы можете связаться с нами, либо\r\n            узнать больше о нас. Ниже представлен ассортимент наших услуг.\r\n          </p>\r\n          <p>\r\n            <button\r\n              className=\"btn btn-success my-2 mx-1\"\r\n              onClick={() => slideContactVar(slideContactVar() + 1)}\r\n            >\r\n              Связаться с нами\r\n            </button>\r\n            <a href=\"/#about\" className=\"btn btn-outline-success my-2 mx-1\">\r\n              О нас\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <CurveLine color={\"rgb(248, 249, 250)\"} />\r\n    </S.Section>\r\n  );\r\n};\r\n","import styled, { css } from \"styled-components\";\r\nimport { slideToView } from \"../../../../Styles/animations\";\r\n\r\nconst uri = process.env.REACT_APP_URI;\r\n\r\nexport const Section = styled.section`\r\n  display: flex;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  max-width: none;\r\n  background-color: hsl(0, 0%, 13%);\r\n  box-shadow: inset -0.25rem 0 2rem 2rem hsl(0, 0%, 13%);\r\n  background-image: url(${uri + \"/img/1-noShadow.jpg\"});\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  overflow: hidden;\r\n`;\r\ntype DividerProps = {\r\n  $animated: boolean;\r\n};\r\nexport const Divider = styled.div<DividerProps>`\r\n  position: relative;\r\n  margin: 3.5em 2em;\r\n  padding: 1rem 0.5rem;\r\n  width: 100%;\r\n  color: ${({ theme }) => theme.colors.revert};\r\n  background-color: hsla(0, 0%, 0%, 0.5);\r\n  box-shadow: 0 3px 5px 3px hsla(0, 0%, 0%, 0.25);\r\n  overflow: hidden;\r\n  min-width: 330px;\r\n  height: auto;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  ${({ $animated }) =>\r\n    $animated &&\r\n    css`\r\n      visibility: visible;\r\n      opacity: 1;\r\n      animation: ${slideToView} 0.5s ease-out;\r\n      animation-fill-mode: backwards;\r\n    `};\r\n  @media screen and ${({ theme }) => theme.media.iPad} {\r\n    margin: 3.5em 2em 3.5em auto;\r\n    max-width: 35vw;\r\n  }\r\n  @media screen and ${({ theme }) => theme.media.PC} {\r\n    margin: 3.5em 5em 3.5em auto;\r\n    max-width: 28vw;\r\n  }\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\nimport { getTransition } from \"../../../../../../Styles/utilites\";\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  height: 12.5rem;\r\n  align-items: center;\r\n  //input {\r\n  //  padding: 0.7rem;\r\n  //}\r\n`;\r\ntype DividerProps = {\r\n  isFirst: boolean;\r\n};\r\nexport const FirstDivider = styled.div<DividerProps>`\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  transform: translateX(${({ isFirst }) => (isFirst ? 0 : -150)}%);\r\n  ${getTransition(300, \"transform\", \"ease-out\")}\r\n`;\r\n\r\nexport const SecondDivider = styled.div<DividerProps>`\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  transform: translateX(${({ isFirst }) => (isFirst ? 150 : 0)}%);\r\n  ${getTransition(300, \"transform\", \"ease-out\")}\r\n`;\r\nexport const Textarea = styled.textarea`\r\n  height: 8.25em;\r\n  max-height: 8.25em;\r\n`;\r\nexport const BtnsWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  transition: all 0.3s;\r\n  margin-top: 2rem;\r\n`;\r\nexport const ButtonBack = styled.div<DividerProps>`\r\n  opacity: ${({ isFirst }) => (isFirst ? 0 : 1)};\r\n  visibility: ${({ isFirst }) => (isFirst ? \"hidden\" : \"visible\")};\r\n  ${getTransition(300, \"opacity\", \"ease\")}\r\n`;\r\nexport const Warning = styled.label`\r\n  position: absolute;\r\n  bottom: -21px;\r\n  text-align: center;\r\n  font-size: 0.8rem;\r\n`;\r\ntype CheckDividerProps = {\r\n  isVisible: boolean;\r\n  isTransDown: boolean;\r\n};\r\nexport const CheckDivider = styled.div<CheckDividerProps>`\r\n  visibility: ${({ isVisible }) => (isVisible ? \"visible\" : \"hidden\")};\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  position: absolute;\r\n  bottom: -2.5rem;\r\n  margin-top: 1rem;\r\n  ${({ isTransDown }) =>\r\n    isTransDown &&\r\n    css`\r\n      transform: translateY(0.8em);\r\n      @media screen and ${({ theme }) => theme.media.bigMobile} {\r\n        transform: translateY(0.1em);\r\n      }\r\n      @media screen and ${({ theme }) => theme.media.iPad} {\r\n        transform: translateY(0.8em);\r\n      }\r\n    `}\r\n\r\n  ${getTransition(150, [\"transform\", \"visibility\", \"opacity\"], \"ease\")};\r\n`;\r\nexport const InfoLabel = styled.label`\r\n  font-size: 0.8rem;\r\n  color: #6c757d;\r\n  line-height: 1;\r\n  text-align: left;\r\n  margin-top: 1rem;\r\n`;\r\nexport const CheckLabel = styled(InfoLabel)`\r\n  color: ${({ theme }) => theme.colors.saturatlessGreen};\r\n  margin-top: 0;\r\n`;\r\n","import React, { MutableRefObject, useCallback, useRef } from \"react\";\r\n\r\ntype PhoneSampleProps = {\r\n  value: string;\r\n  change: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  message?: string;\r\n};\r\nexport const PhoneSample = ({ value, message, change }: PhoneSampleProps) => {\r\n  const phone = useRef() as MutableRefObject<HTMLInputElement>;\r\n  const getPhone = useCallback(() => {\r\n    const valueArr = [...value];\r\n    if (!value.length) return \"(___) ___-____\";\r\n    const mask = [\"(\"];\r\n    mask[1] = valueArr[0] || \"_\";\r\n    mask[2] = valueArr[1] || \"_\";\r\n    mask[3] = valueArr[2] || \"_\";\r\n    mask[4] = \")\";\r\n    mask[5] = \" \";\r\n    mask[6] = valueArr[3] || \"_\";\r\n    mask[7] = valueArr[4] || \"_\";\r\n    mask[8] = valueArr[5] || \"_\";\r\n    mask[9] = \"-\";\r\n    mask[10] = valueArr[6] || \"_\";\r\n    mask[11] = valueArr[7] || \"_\";\r\n    mask[12] = valueArr[8] || \"_\";\r\n    mask[13] = valueArr[9] || \"_\";\r\n    return mask.join(\"\");\r\n  }, [value]);\r\n  const onFocus = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    phone.current.value = e.target.value.replace(/[()_\\-\\s]+/g, \"\").trim();\r\n  };\r\n  const onBlur = () => {\r\n    phone.current.value = getPhone();\r\n  };\r\n\r\n  return (\r\n    <input\r\n      ref={phone}\r\n      name=\"phone\"\r\n      type=\"text\"\r\n      className={`form-control ${\r\n        message && (message === \"isValid\" ? \"is-valid\" : \"is-invalid\")\r\n      }`}\r\n      id=\"phone\"\r\n      placeholder=\"999-999-99-99\"\r\n      value={value}\r\n      onFocus={onFocus}\r\n      onBlur={onBlur}\r\n      onChange={change}\r\n      required\r\n    />\r\n  );\r\n};\r\n","import React, {\n  FormEvent,\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from \"react\";\nimport {\n  Messages,\n  validation as getValidation\n} from \"../../../../../../functions/validation\";\nimport { MutationFunctionOptions, useReactiveVar } from \"@apollo/client\";\nimport * as S from \"./Styles\";\nimport { PhoneSample } from \"./Inputs/PhoneSample\";\nimport { useFormInput } from \"../../../../../../Hooks/useFormInput\";\nimport { AddCallorderType } from \"../../../../../../GraphQL/Mutation\";\nimport { slideContactVar } from \"../../../../../../GraphQL/Cache\";\nimport { debounce } from \"lodash\";\n\ntype FormProps = {\n  action: (\n    options?: MutationFunctionOptions<\n      AddCallorderType[\"AddCallorder\"],\n      AddCallorderType[\"AddCallorderVars\"]\n    >\n  ) => void;\n};\n\nexport const Form = ({ action }: FormProps) => {\n  const [formValue, reset] = useFormInput({\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    checkbox: \"false\",\n    message: \"\"\n  });\n  const [validMessages, setValidMessages] = useState<Messages | null>(null);\n  const name = useRef() as MutableRefObject<HTMLInputElement>;\n  const triggerFocus = useReactiveVar(slideContactVar);\n  const [isFirstStage, setFirstStage] = useState(true);\n  useEffect(() => {\n    if (triggerFocus) {\n      name.current.focus();\n      console.log(\"focus\");\n    }\n  }, [triggerFocus]);\n\n  const validation = useMemo(\n    () =>\n      getValidation({\n        optional: [\"email\", \"message\"]\n      }),\n    []\n  );\n  const checkValid = useCallback(\n    (\n      e: React.ChangeEvent<HTMLInputElement>,\n      messages: typeof validMessages\n    ) => {\n      const valid = validation({\n        [e.target.name]: e.target.value\n      });\n      setValidMessages({\n        ...messages,\n        isValid: valid.isValid,\n        [e.target.name]: valid[e.target.name as keyof Messages]\n      });\n    },\n    []\n  );\n  const debouncedFn = useMemo(\n    () =>\n      debounce(\n        (\n          e: React.ChangeEvent<HTMLInputElement>,\n          messages: typeof validMessages\n        ) => {\n          checkValid(e, messages);\n        },\n        500\n      ),\n    []\n  );\n  const onType = (e: React.ChangeEvent<HTMLInputElement>) => {\n    formValue.onChange(e);\n    debouncedFn(e, validMessages);\n  };\n  const onSubmit = useCallback(\n    (e: FormEvent) => {\n      e.preventDefault();\n      const valid = validation({\n        ...formValue.value\n      });\n      setValidMessages(valid);\n      if (valid.isValid) {\n        if (isFirstStage) {\n          setFirstStage(false);\n          return;\n        }\n        action({\n          variables: {\n            ...formValue.value,\n            subscriber: formValue.value.checkbox === \"true\",\n            describe: formValue.value.message\n          }\n        });\n        // очистка формы\n        reset();\n        //чтобы убрать видимость кнопки назад\n        setFirstStage(true);\n        console.log(formValue.value);\n      }\n    },\n    [formValue.value, validation, isFirstStage]\n  );\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} method=\"post\" role=\"form\">\n        <S.Wrapper>\n          <S.FirstDivider isFirst={isFirstStage}>\n            <div className=\"mb-4 position-relative\">\n              <input\n                ref={name}\n                type=\"text\"\n                name=\"name\"\n                className={`form-control ${\n                  validMessages &&\n                  validMessages.name &&\n                  (validMessages.name === \"isValid\" ? \"is-valid\" : \"is-invalid\")\n                }`}\n                id=\"inputName1\"\n                placeholder=\"Имя\"\n                value={formValue.value.name}\n                onChange={onType}\n                required\n              />\n              <S.Warning id=\"invalid-name\" className=\"invalid-feedback\">\n                {validMessages && validMessages.name}\n              </S.Warning>\n            </div>\n            <div className=\"mb-4 position-relative\">\n              <div className=\"input-group has-validation\">\n                <span className={\"input-group-text\"}>+7</span>\n                <PhoneSample\n                  value={formValue.value.phone}\n                  change={onType}\n                  message={validMessages?.phone}\n                />\n                <S.Warning id=\"invalid-phone\" className=\"invalid-feedback\">\n                  {validMessages && validMessages.phone}\n                </S.Warning>\n              </div>\n            </div>\n            <div className=\"mb-3 position-relative\">\n              <input\n                type=\"email\"\n                name=\"email\"\n                className={`form-control ${\n                  validMessages &&\n                  validMessages.email &&\n                  (validMessages.email === \"isValid\"\n                    ? \"is-valid\"\n                    : \"is-invalid\")\n                }`}\n                id=\"inputEmail1\"\n                aria-describedby=\"emailHelp\"\n                placeholder=\"Email (не обязательно)\"\n                value={formValue.value.email}\n                onChange={onType}\n              />\n              <S.Warning id=\"invalid-email\" className=\"invalid-feedback\">\n                {validMessages && validMessages.email}\n              </S.Warning>\n              <S.CheckDivider\n                id=\"check\"\n                isVisible={!!formValue.value.email}\n                isTransDown={\n                  !!(\n                    validMessages &&\n                    validMessages.email &&\n                    validMessages.email !== \"isValid\"\n                  )\n                }\n                className={`form-check`}\n              >\n                <input\n                  name=\"checkbox\"\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  id=\"same-address\"\n                  value={formValue.value.checkbox}\n                  onChange={formValue.onChange}\n                />\n                <S.CheckLabel htmlFor=\"same-address\">\n                  Оповещать меня о проводимых акциях и специальных предложениях.\n                </S.CheckLabel>\n              </S.CheckDivider>\n            </div>\n          </S.FirstDivider>\n          <S.SecondDivider isFirst={isFirstStage}>\n            <div className=\"mb-3\">\n              <S.Textarea\n                name=\"message\"\n                className=\"form-control\"\n                aria-label=\"With textarea\"\n                value={formValue.value.message}\n                onChange={formValue.onChange}\n                placeholder={\"Сообщение (не обязательно)\"}\n              />\n              <div id=\"messageHelp\" className=\"form-text\">\n                Укажите дополнительную информацию тут.\n              </div>\n            </div>\n          </S.SecondDivider>\n        </S.Wrapper>\n        <S.BtnsWrapper>\n          <S.ButtonBack\n            isFirst={isFirstStage}\n            id=\"buttonBack\"\n            className={`btn btn-success`}\n            onClick={() => {\n              setFirstStage(true);\n              console.log(\"fBtn\");\n            }}\n          >\n            Назад\n          </S.ButtonBack>\n          <button\n            id=\"buttonSub\"\n            type=\"submit\"\n            className={`btn btn-success ${\n              (!formValue.value.name || !formValue.value.phone) && \"disabled\"\n            }`}\n            onClick={(e) => {\n              if (e.target instanceof HTMLButtonElement) {\n                e.target.blur();\n              }\n            }}\n          >\n            {isFirstStage ? \"Далее\" : \"Отправить\"}\n          </button>\n        </S.BtnsWrapper>\n        <S.InfoLabel id=\"emailHelp\" className=\"form-text\">\n          Мы не передаем личные данные третьим лицам.\n        </S.InfoLabel>\n      </form>\n    </div>\n  );\n};\n","import styled from \"styled-components\";\r\n\r\nexport const Heading = styled.h2`\r\n  margin: -2rem 1rem 4rem;\r\n  color: hsl(354, 70%, 54%);\r\n`;\r\nexport const HeadingSuccess = styled(Heading)`\r\n  color: ${({ theme }) => theme.colors.brandGreen};\r\n`;\r\nexport const Describe = styled.p`\r\n  color: ${({ theme }) => theme.colors.saturatlessGreen};\r\n  margin-bottom: 2rem;\r\n`;\r\n","import * as S from \"../ContactError/Styles\";\r\n\r\nexport const ThankYou = () => {\r\n  return (\r\n    <div className=\"container pt-3 \">\r\n      <S.HeadingSuccess>Благодарим за обращение</S.HeadingSuccess>\r\n      <S.Describe>\r\n        Ваша заявка принята, контакт будет рассмотрен администрацией в ближайшее\r\n        время.\r\n      </S.Describe>\r\n      <a href=\"/#\">Наверх</a>\r\n    </div>\r\n  );\r\n};\r\n","import * as S from \"./Styles\";\r\nexport const ContactError = () => {\r\n  return (\r\n    <div className=\"container pt-3\">\r\n      <S.Heading>Произошла ошибка</S.Heading>\r\n      <S.Describe>Ошибка при сохранении контакта.</S.Describe>\r\n      <S.Describe>Попробуйте повторить попытку позже.</S.Describe>\r\n    </div>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { getTransition } from \"../../../../../Styles/utilites\";\r\n\r\ntype WrapperProps = {\r\n  isHidden: boolean;\r\n};\r\nexport const Wrapper = styled.div<WrapperProps>`\r\n  visibility: ${({ isHidden }) => (isHidden ? \"hidden\" : \"visible\")};\r\n`;\r\nexport const StateDivider = styled.div<WrapperProps>`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  visibility: ${({ isHidden }) => (isHidden ? \"hidden\" : \"visible\")};\r\n  opacity: ${({ isHidden }) => (isHidden ? \"0\" : \"1\")};\r\n  ${getTransition(150, [\"opacity\", \"visibility\"], \"ease\")}\r\n`;\r\nexport const Heading = styled.h2`\r\n  text-align: center;\r\n  margin-bottom: 1rem;\r\n`;\r\nexport const Describe = styled.p`\r\n  text-align: center;\r\n  font-size: 0.9rem;\r\n  color: ${({ theme }) => theme.colors.saturatlessGreen};\r\n`;\r\n","import { useMutation } from \"@apollo/client\";\nimport { Form } from \"./Form/Form\";\nimport { useState } from \"react\";\nimport { ThankYou } from \"./ThankYou/ThankYou\";\nimport { ContactError } from \"./ContactError/ContactError\";\nimport {\n  ADD_CALL_ORDER,\n  AddCallorderType\n} from \"../../../../../GraphQL/Mutation\";\nimport { Spinner } from \"../../../../../Components/Spinner/Spinner\";\nimport * as S from \"./Styles\";\n\nconst ProcessContact = () => {\n  const [sendForm, { loading, error }] = useMutation<\n    AddCallorderType[\"AddCallorder\"],\n    AddCallorderType[\"AddCallorderVars\"]\n  >(ADD_CALL_ORDER, {\n    onCompleted: (data) => {\n      if (data.addCallorder) setSuccess(\"TRUE\");\n      else setSuccess(\"FALSE\");\n    }\n  });\n  const [success, setSuccess] = useState(\"\");\n\n  return (\n    <>\n      <S.StateDivider isHidden={!loading && success === \"\" && !error}>\n        {loading && <Spinner />}\n        {success === \"TRUE\" && <ThankYou />}\n        {success === \"FALSE\" || (error && <ContactError />)}\n      </S.StateDivider>\n      <S.Wrapper\n        isHidden={\n          loading || success === \"TRUE\" || success === \"FALSE\" || !!error\n        }\n      >\n        <S.Heading>Связаться с нами</S.Heading>\n        <S.Describe>\n          Заполните небольшую форму ниже и мы свяжемся с Вами в ближайшее время.\n        </S.Describe>\n        <Form action={sendForm} />\n      </S.Wrapper>\n    </>\n  );\n};\n\nexport default ProcessContact;\n","import * as S from \"./Styles\";\nimport { CurveLine } from \"../../../../Components/CurveLine/CurveLine\";\nimport ProcessContact from \"./ProcessContact/ProcessContact\";\nimport { MutableRefObject, useRef } from \"react\";\nimport { useOnScreen } from \"../../../../Hooks/useOnScreen\";\n\nexport const Contact = () => {\n  const ref = useRef() as MutableRefObject<HTMLDivElement>;\n  const animated = useOnScreen<HTMLDivElement>(ref, \"-200px\");\n  return (\n    <S.Section className=\"text-center container\" id={\"contact\"}>\n      <S.Divider $animated={animated} ref={ref}>\n        <ProcessContact />\n      </S.Divider>\n      <CurveLine color={\"hsl(152, 0%, 13%)\"} />\n    </S.Section>\n  );\n};\n","import styled, { css } from \"styled-components\";\r\nimport { slideToView } from \"../../../../../../Styles/animations\";\r\ntype WrapperProps = {\r\n  $index: number;\r\n  $animated: boolean;\r\n};\r\nexport const Wrapper = styled.div<WrapperProps>`\r\n  visibility: hidden;\r\n  ${({ $animated, $index }) =>\r\n    $animated &&\r\n    css`\r\n      visibility: visible;\r\n      animation: ${slideToView} 0.5s ease-out;\r\n      animation-delay: ${$index * 75 + 100}ms;\r\n      animation-fill-mode: backwards;\r\n    `};\r\n`;\r\n\r\nexport const Heading = styled.h2`\r\n  color: hsl(145deg 80% 25%);\r\n`;\r\n\r\nexport const IconDivider = styled.div`\r\n  svg {\r\n    width: 1.5em;\r\n    height: 1.5em;\r\n  }\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n  color: hsl(145, 17%, 20%);\r\n`;\r\n","import { Feature } from \"../../../../../../GraphQL/typeDefs\";\r\nimport * as S from \"./Styles\";\r\nimport {\r\n  FcApproval,\r\n  FcElectronics,\r\n  FcLike,\r\n  FcMoneyTransfer,\r\n  FcOnlineSupport,\r\n  FcOvertime\r\n} from \"react-icons/all\";\r\n\r\nconst getIcon = (id: string) => {\r\n  if (id === \"date\") {\r\n    return <FcOvertime />;\r\n  } else if (id === \"price\") {\r\n    return <FcMoneyTransfer />;\r\n  } else if (id === \"supp\") {\r\n    return <FcOnlineSupport />;\r\n  } else if (id === \"qual\") {\r\n    return <FcApproval />;\r\n  } else if (id === \"tech\") {\r\n    return <FcElectronics />;\r\n  } else {\r\n    return <FcLike />;\r\n  }\r\n};\r\n\r\ntype ItemProps = {\r\n  item: Feature;\r\n  i: number;\r\n  animated: boolean;\r\n};\r\nexport const Item = ({ item, i, animated }: ItemProps) => {\r\n  return (\r\n    <>\r\n      <S.Wrapper\r\n        $animated={animated}\r\n        $index={i}\r\n        className=\"col d-flex align-items-start\"\r\n      >\r\n        <div className=\"icon-square bg-light text-dark flex-shrink-0 me-3\">\r\n          <S.IconDivider className=\"bi\">{getIcon(item.icon)}</S.IconDivider>\r\n        </div>\r\n        <div>\r\n          <S.Heading>{item.title}</S.Heading>\r\n          <S.Paragraph>{item.description}</S.Paragraph>\r\n        </div>\r\n      </S.Wrapper>\r\n    </>\r\n  );\r\n};\r\n","import { Feature } from \"../../../../../GraphQL/typeDefs\";\r\nimport { Item } from \"./Item/Item\";\r\nimport { MutableRefObject, useRef } from \"react\";\r\nimport { useOnScreen } from \"../../../../../Hooks/useOnScreen\";\r\n\r\ntype ItemsWrapperProps = {\r\n  items: Feature[];\r\n};\r\nexport const ItemsWrapper = ({ items }: ItemsWrapperProps) => {\r\n  const ref = useRef() as MutableRefObject<HTMLDivElement>;\r\n  const animated = useOnScreen<HTMLDivElement>(ref, \"-200px\");\r\n  return (\r\n    <div className=\"row g-4 py-5 row-cols-1 row-cols-lg-3\" ref={ref}>\r\n      {items.map((f, i) => (\r\n        <Item item={f} key={f.id} animated={animated} i={i} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { GET_FEATURES, GetFeatures } from \"../../../../../GraphQL/Query\";\r\nimport { Spinner } from \"../../../../../Components/Spinner/Spinner\";\r\nimport { ItemsWrapper } from \"./ItemsWrapper\";\r\n\r\nexport const Items = () => {\r\n  const { data, loading, error } = useQuery<GetFeatures>(GET_FEATURES);\r\n\r\n  if (loading) return <Spinner />;\r\n  if (error) return <div>{error.message}</div>;\r\n  if (!data) return <div>Нет данных!</div>;\r\n  return <ItemsWrapper items={data.getFeatures} />;\r\n};\r\n","import styled, { css } from \"styled-components\";\r\nimport { slideToViewText } from \"../../../../Styles/animations\";\r\ntype HeadingProps = {\r\n  $animated: boolean;\r\n};\r\nexport const Heading = styled.h1<HeadingProps>`\r\n  font-size: 2.5rem;\r\n  text-align: center;\r\n  font-weight: 600;\r\n  color: hsl(145deg 80% 25%);\r\n  visibility: hidden;\r\n  ${({ $animated }) =>\r\n    $animated &&\r\n    css`\r\n      visibility: visible;\r\n      animation: ${slideToViewText} 0.5s ease-out;\r\n      animation-fill-mode: backwards;\r\n    `};\r\n`;\r\n","import { Items } from \"./Items/Items\";\r\n\r\nimport * as S from \"./Styles\";\r\nimport { CurveLine } from \"../../../../Components/CurveLine/CurveLine\";\r\nimport { MutableRefObject, useRef } from \"react\";\r\nimport { useOnScreen } from \"../../../../Hooks/useOnScreen\";\r\n\r\nconst About = () => {\r\n  const ref = useRef() as MutableRefObject<HTMLDivElement>;\r\n  const animated = useOnScreen<HTMLDivElement>(ref, \"-200px\");\r\n  return (\r\n    <>\r\n      <section className=\"py-5 position-relative\" id=\"about\">\r\n        <div className={\"container\"} ref={ref}>\r\n          <S.Heading className=\"pb-2\" $animated={animated}>\r\n            О Finevideo\r\n          </S.Heading>\r\n          <Items />\r\n        </div>\r\n        <CurveLine color={\"hsl(0, 0%, 13%)\"} />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { Cards } from \"./Cards/Cards\";\r\nimport { CardContainer } from \"./CardContainer/CardContainer\";\r\nimport { ProjectSteps } from \"./ProjectSteps/ProjectSteps\";\r\nimport { Hero } from \"./Hero/Hero\";\r\nimport { Contact } from \"./Contact/Contact\";\r\nimport About from \"./About/About\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Hero />\r\n\r\n      <CardContainer>\r\n        <Cards />\r\n      </CardContainer>\r\n\r\n      <ProjectSteps />\r\n\r\n      <About />\r\n\r\n      <Contact />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}